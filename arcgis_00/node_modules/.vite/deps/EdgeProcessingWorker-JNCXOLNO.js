import {
  A,
  a,
  f,
  m,
  p,
  u
} from "./chunk-JF7MZVTV.js";
import {
  I
} from "./chunk-XGUXIA3X.js";
import "./chunk-DO57KW4K.js";
import "./chunk-OXZA5ZTD.js";
import "./chunk-EXV6EXJY.js";
import "./chunk-HXF46NPP.js";
import "./chunk-ERPBUHHC.js";
import "./chunk-JDLUEEG6.js";
import "./chunk-WD6NUK3A.js";
import "./chunk-ARQKL4BE.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-3ECTZ67D.js";
import "./chunk-Z7ID6LQT.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/3d/support/buffer/workerHelper.js
function u2(r, u4) {
  return u4.push(r.buffer), { buffer: r.buffer, layout: new I(r.layout) };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js
var o = class {
  async extract(e) {
    const t = c(e), n = f(t), r = [t.data.buffer];
    return { result: l(n, r), transferList: r };
  }
  async extractComponentsEdgeLocations(t) {
    const s = c(t), i = u(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a2 = p(i, p2, g), o2 = [];
    return { result: u2(a2.regular.instancesData, o2), transferList: o2 };
  }
  async extractEdgeLocations(t) {
    const s = c(t), i = u(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a2 = p(i, f2, g), o2 = [];
    return { result: u2(a2.regular.instancesData, o2), transferList: o2 };
  }
};
function c(e) {
  return { data: A.createView(e.dataBuffer), indices: "Uint32Array" === e.indicesType ? new Uint32Array(e.indices) : "Uint16Array" === e.indicesType ? new Uint16Array(e.indices) : e.indices, indicesLength: e.indicesLength, writerSettings: e.writerSettings, skipDeduplicate: e.skipDeduplicate };
}
function l(t, n) {
  n.push(t.regular.lodInfo.lengths.buffer), n.push(t.silhouette.lodInfo.lengths.buffer);
  return { regular: { instancesData: u2(t.regular.instancesData, n), lodInfo: { lengths: t.regular.lodInfo.lengths.buffer } }, silhouette: { instancesData: u2(t.silhouette.instancesData, n), lodInfo: { lengths: t.silhouette.lodInfo.lengths.buffer } }, averageEdgeLength: t.averageEdgeLength };
}
var u3 = class {
  allocate(e) {
    return a.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1);
  }
};
var d = class {
  allocate(e) {
    return m.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1), e.componentIndex.set(t, n.componentIndex);
  }
};
var f2 = new u3();
var p2 = new d();
var g = { allocate: () => null, write: () => {
}, trim: () => null };
export {
  o as default
};
//# sourceMappingURL=EdgeProcessingWorker-JNCXOLNO.js.map
