import {
  d as d2,
  f
} from "./chunk-GJ4AX7TK.js";
import {
  i
} from "./chunk-VJGPQIUO.js";
import "./chunk-CX6ACZQ7.js";
import {
  oe
} from "./chunk-DILKCB2X.js";
import "./chunk-EZOSZES7.js";
import "./chunk-5EHLOJ6Z.js";
import "./chunk-SS7JZLQV.js";
import "./chunk-6HXKIKIT.js";
import "./chunk-XQSFOYTA.js";
import "./chunk-XGFXC7IN.js";
import "./chunk-2YLUDNP5.js";
import "./chunk-OW4XGQQP.js";
import "./chunk-5OU4ZQ43.js";
import "./chunk-MYZ743ND.js";
import "./chunk-4GVOVKVX.js";
import "./chunk-AER5JAFS.js";
import "./chunk-7HZ72XIE.js";
import "./chunk-4O2QGREW.js";
import "./chunk-P662BGUZ.js";
import "./chunk-RNMDDDND.js";
import "./chunk-E7T34AFG.js";
import "./chunk-U3JB4DA4.js";
import "./chunk-VR7WK7TF.js";
import "./chunk-BQJY56X4.js";
import "./chunk-4XXKLC7H.js";
import "./chunk-NVZXNBIH.js";
import "./chunk-K6D7DQGC.js";
import "./chunk-CN3PB7HS.js";
import "./chunk-SQZ7ON7Z.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-DSVPEX7K.js";
import "./chunk-PX3Q44FM.js";
import "./chunk-XYJMHUDA.js";
import "./chunk-CSLWFQJE.js";
import "./chunk-PR2OEILG.js";
import "./chunk-XP6ESZGI.js";
import "./chunk-JKPERUTC.js";
import "./chunk-A4HFWKMU.js";
import "./chunk-TDXHXKUI.js";
import "./chunk-BBJLFBMQ.js";
import "./chunk-AZ4FK2MA.js";
import "./chunk-EULDPA4O.js";
import "./chunk-IVABPLLZ.js";
import "./chunk-TBHRKIAA.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-OARQV2FW.js";
import "./chunk-C4L2TGDU.js";
import "./chunk-325OL72R.js";
import "./chunk-EIIX6MK3.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-R6HT3QM2.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-5CJTGLZW.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-YAWND7HF.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-3QLIFMET.js";
import "./chunk-UOQERNSF.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-GTOF2BJC.js";
import "./chunk-FQZ2JEHK.js";
import "./chunk-D4SJZ5KN.js";
import "./chunk-A7XI44IB.js";
import "./chunk-R7L5PZPI.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-EL72ISXP.js";
import "./chunk-5KLICR5E.js";
import "./chunk-CKSC27NP.js";
import "./chunk-OVFWVPXL.js";
import "./chunk-WNYS35QN.js";
import "./chunk-VFUAVCAY.js";
import "./chunk-VZAEQ6CY.js";
import "./chunk-SS33L3LC.js";
import "./chunk-X4Y5OF5X.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-6ALTXU4U.js";
import "./chunk-UIMMV4OY.js";
import "./chunk-QZ4HHFPF.js";
import {
  p,
  t
} from "./chunk-VRNAR2BU.js";
import "./chunk-IAMROCVA.js";
import "./chunk-7L7U6YJ3.js";
import {
  d
} from "./chunk-YYGN2GO6.js";
import "./chunk-QXLGW66I.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-4HDCOJ24.js";
import "./chunk-VY2MIGMV.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-NHDVBH5V.js";
import "./chunk-WLU7KKOI.js";
import "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-HVBIBP5P.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import "./chunk-U4IWFNWD.js";
import "./chunk-6L4U2AW6.js";
import "./chunk-RFIIU6XF.js";
import {
  k
} from "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-BRRN7CRU.js";
import "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-5XLKQQPP.js";
import "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import {
  V
} from "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import "./chunk-4X5MDDUC.js";
import "./chunk-UURR7HU3.js";
import "./chunk-JLE6P4DW.js";
import "./chunk-CL7UAIKB.js";
import {
  h,
  l
} from "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SF7FIURP.js";
import "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import "./chunk-TXAS6RAG.js";
import "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/GeoRSSLayerView2D.js
var y = class extends f(d2) {
  constructor() {
    super(...arguments), this._graphicsViewMap = {}, this._popupTemplates = /* @__PURE__ */ new Map(), this.graphicsViews = [];
  }
  async hitTest(e2, r) {
    if (!this.graphicsViews.length)
      return null;
    const s = this.layer;
    return this.graphicsViews.reverse().map((r2) => {
      const i2 = this._popupTemplates.get(r2), t2 = r2.hitTest(e2);
      for (const e3 of t2)
        e3.layer = s, e3.sourceLayer = s, e3.popupTemplate = i2;
      return t2;
    }).flat().map((r2) => ({ type: "graphic", graphic: r2, layer: s, mapPoint: e2 }));
  }
  update(e2) {
    if (this.graphicsViews)
      for (const r of this.graphicsViews)
        r.processUpdate(e2);
  }
  attach() {
    this.addAttachHandles([l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.featureCollections;
    }, (e2) => {
      this._clear();
      for (const { popupInfo: i2, featureSet: t2, layerDefinition: o } of e2) {
        const e3 = d.fromJSON(t2), p2 = new V(e3.features), n = o.drawingInfo, m = i2 ? k.fromJSON(i2) : null, y2 = t(n.renderer), g2 = new oe({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: p2, renderer: y2, container: new i(this.view.featuresTilingScheme) });
        this._graphicsViewMap[e3.geometryType] = g2, this._popupTemplates.set(g2, m), "polygon" !== e3.geometryType || this.layer.polygonSymbol ? "polyline" !== e3.geometryType || this.layer.lineSymbol ? "point" !== e3.geometryType || this.layer.pointSymbol || (this.layer.pointSymbol = y2.symbol) : this.layer.lineSymbol = y2.symbol : this.layer.polygonSymbol = y2.symbol, this.graphicsViews.push(g2), this.container.addChild(g2.container);
      }
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.polygonSymbol;
    }, (e2) => {
      this._graphicsViewMap.polygon.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.lineSymbol;
    }, (e2) => {
      this._graphicsViewMap.polyline.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.pointSymbol;
    }, (e2) => {
      this._graphicsViewMap.point.renderer = new p({ symbol: e2 });
    }, h)]);
  }
  detach() {
    this._clear();
  }
  moveStart() {
  }
  moveEnd() {
  }
  viewChange() {
    for (const e2 of this.graphicsViews)
      e2.viewChange();
  }
  _clear() {
    this.container.removeAllChildren();
    for (const e2 of this.graphicsViews)
      e2.destroy();
    this._graphicsViewMap = {}, this._popupTemplates.clear(), this.graphicsViews.length = 0;
  }
};
y = e([a("esri.views.2d.layers.GeoRSSLayerView2D")], y);
var g = y;
export {
  g as default
};
//# sourceMappingURL=GeoRSSLayerView2D-L7LCHBHA.js.map
