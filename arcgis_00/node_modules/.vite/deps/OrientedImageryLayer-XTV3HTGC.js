import {
  Be
} from "./chunk-ZM5VNAIS.js";
import "./chunk-4KFSTSVV.js";
import "./chunk-GOTSAXOX.js";
import "./chunk-2RTM4ZHS.js";
import "./chunk-QSWXHF7C.js";
import "./chunk-UBVDHOW4.js";
import "./chunk-B6IMHQ7A.js";
import "./chunk-NONDLDDV.js";
import "./chunk-VXGW7CXZ.js";
import "./chunk-XNYF4YHK.js";
import "./chunk-LVYJ3BFD.js";
import "./chunk-W7NPCP2A.js";
import "./chunk-B6R735ZF.js";
import "./chunk-BJSER2MD.js";
import "./chunk-X5YBKNPQ.js";
import "./chunk-BLWHZOWS.js";
import "./chunk-KACQFA4U.js";
import "./chunk-GOBOJQPM.js";
import "./chunk-OWJMBATL.js";
import "./chunk-YBZ3PNAF.js";
import "./chunk-Y7FTNVRA.js";
import "./chunk-D7CFF2FH.js";
import "./chunk-S6UQK27H.js";
import "./chunk-XOPGXWER.js";
import "./chunk-M6X4HWGZ.js";
import "./chunk-OGDE7T5O.js";
import "./chunk-62JUI7PG.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import "./chunk-7N54VP3N.js";
import "./chunk-UQH37OH4.js";
import "./chunk-VCOABNMG.js";
import "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-AWZZYYVR.js";
import "./chunk-HSP4VKTO.js";
import "./chunk-COWNIHL5.js";
import "./chunk-OH72SRIK.js";
import "./chunk-75B6UJRJ.js";
import "./chunk-HGK7QSHJ.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-CDH6OAES.js";
import "./chunk-N2FT2B4P.js";
import "./chunk-LLKNYARI.js";
import "./chunk-6VMHQJDC.js";
import "./chunk-IIHBYDIT.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import "./chunk-WDH5YZUJ.js";
import "./chunk-ELRBKBPI.js";
import "./chunk-5T5QOUDR.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-HXLO7LC5.js";
import "./chunk-5YQM3GC2.js";
import "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-ZFHT67PQ.js";
import "./chunk-QDV73XFP.js";
import "./chunk-EN7ZU6UM.js";
import "./chunk-4QODSIJL.js";
import "./chunk-HP3XVAWO.js";
import "./chunk-LJQTXJLJ.js";
import "./chunk-LV4D4M7G.js";
import "./chunk-ZZC3B6AH.js";
import "./chunk-HFKPIUEB.js";
import "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import "./chunk-BS6NX4XB.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-Y2UHC2VM.js";
import "./chunk-7APSGFF5.js";
import "./chunk-S5RFXGTW.js";
import "./chunk-JQTIJ5DI.js";
import "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-6DVUGIPD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-A4SZU67B.js";
import "./chunk-Y4FK2QML.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import "./chunk-7KNADJUA.js";
import "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-VL6IMOUO.js";
import "./chunk-YCF7NU4C.js";
import "./chunk-FQ2MMUPL.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import {
  y
} from "./chunk-DUGCD7YI.js";
import {
  a2 as a
} from "./chunk-3CMERT4A.js";
import {
  e
} from "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import "./chunk-7LFT2RDJ.js";
import "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s3 as s
} from "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/OrientedImageryLayer.js
function i(e2) {
  return (r, t, o) => {
    if (!r)
      return null;
    const a2 = r[0].orientedImageryProperties;
    return (a2 == null ? void 0 : a2[e2]) ?? null;
  };
}
var s2 = class extends Be {
  constructor() {
    super(...arguments), this.geometryType = "point", this.operationalLayerType = "OrientedImageryLayer", this.type = "oriented-imagery";
  }
  get effectiveElevationSource() {
    var _a;
    const { elevationSource: e2, demPathPrefix: r, demPathSuffix: t } = this;
    if (!((_a = e2 == null ? void 0 : e2.url) == null ? void 0 : _a.trim()))
      return e2;
    let o = e2.url.trim();
    return (r == null ? void 0 : r.trim()) && (o = `${r.trim()}/${o}`), (t == null ? void 0 : t.trim()) && (o += `/${t.trim()}`), { ...e2, url: o };
  }
  _verifySource() {
    if (super._verifySource(), "point" !== this.geometryType)
      throw new s("oriented-imagery-layer:invalid-geometry-type", "OrientedImageryLayer only supports point geometry type");
  }
};
e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeading") } } })], s2.prototype, "cameraHeading", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeight") } } })], s2.prototype, "cameraHeight", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraPitch") } } })], s2.prototype, "cameraPitch", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraRoll") } } })], s2.prototype, "cameraRoll", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("coveragePercent") } } })], s2.prototype, "coveragePercent", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathPrefix") } } })], s2.prototype, "demPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathSuffix") } } })], s2.prototype, "demPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathPrefix") } } })], s2.prototype, "depthImagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathSuffix") } } })], s2.prototype, "depthImagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("farDistance") } } })], s2.prototype, "farDistance", void 0), e([y({ json: { write: true } })], s2.prototype, "geometryType", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("horizontalFieldOfView") } } })], s2.prototype, "horizontalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("horizontalMeasurementUnit") } } })], s2.prototype, "horizontalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathPrefix") } } })], s2.prototype, "imagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathSuffix") } } })], s2.prototype, "imagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("imageRotation") } } })], s2.prototype, "imageRotation", void 0), e([y({ type: Number, json: { write: true, read: { source: "layers", reader: i("maximumDistance") } } })], s2.prototype, "maximumDistance", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("nearDistance") } } })], s2.prototype, "nearDistance", void 0), e([y({ type: ["OrientedImageryLayer"] })], s2.prototype, "operationalLayerType", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("orientedImageryType") } } })], s2.prototype, "orientedImageryType", void 0), e([y({ json: { read: false }, value: "oriented-imagery", readOnly: true })], s2.prototype, "type", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalFieldOfView") } } })], s2.prototype, "verticalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalMeasurementUnit") } } })], s2.prototype, "verticalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathPrefix") } } })], s2.prototype, "videoPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathSuffix") } } })], s2.prototype, "videoPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("elevationSource") } } })], s2.prototype, "elevationSource", void 0), e([y()], s2.prototype, "effectiveElevationSource", null), s2 = e([a("esri.layers.OrientedImageryLayer")], s2);
var d = s2;
export {
  d as default
};
//# sourceMappingURL=OrientedImageryLayer-XTV3HTGC.js.map
