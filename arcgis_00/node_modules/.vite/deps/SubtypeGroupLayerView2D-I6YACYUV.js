import {
  W
} from "./chunk-UOYBHVLU.js";
import "./chunk-2SHTPLUT.js";
import "./chunk-JGSTWD77.js";
import "./chunk-XR3IIQGY.js";
import "./chunk-5DXEWH5V.js";
import "./chunk-2VJEO6JH.js";
import "./chunk-ND34FL2W.js";
import "./chunk-IL44YAUG.js";
import "./chunk-TUZCWAFI.js";
import "./chunk-V44KDLLP.js";
import "./chunk-Z46XWZWE.js";
import "./chunk-UFN7ZNFK.js";
import "./chunk-K54BRHUJ.js";
import "./chunk-YICPXMG7.js";
import "./chunk-R4R6OMPI.js";
import "./chunk-VGWIRN5T.js";
import "./chunk-R3N6YXZV.js";
import "./chunk-QACTNCS5.js";
import "./chunk-O3TVUDAA.js";
import "./chunk-Q2D4AWJS.js";
import "./chunk-2GLJOVSV.js";
import "./chunk-OXM5AEWV.js";
import "./chunk-66V6VC6G.js";
import "./chunk-IOMDA26A.js";
import "./chunk-3Q24STUY.js";
import "./chunk-PORVB4YW.js";
import "./chunk-6W4QNETY.js";
import "./chunk-SKZVSZDU.js";
import "./chunk-RHYB7TAK.js";
import "./chunk-L3YUDCKP.js";
import "./chunk-INPPJTIQ.js";
import "./chunk-6VFZXUIR.js";
import "./chunk-D7PFANSX.js";
import "./chunk-C6XOMDEV.js";
import "./chunk-BCTQLMHE.js";
import "./chunk-Z3XU4R74.js";
import "./chunk-INNSNI53.js";
import "./chunk-5NQNQAAW.js";
import "./chunk-KEJOWWPH.js";
import "./chunk-Q5R4SEKK.js";
import "./chunk-IL355RAY.js";
import "./chunk-3V3OLLRL.js";
import "./chunk-WD44CU6B.js";
import "./chunk-HXF46NPP.js";
import "./chunk-WD6NUK3A.js";
import "./chunk-GZLGPJT5.js";
import "./chunk-XBCX74QQ.js";
import "./chunk-NUGAWFAM.js";
import "./chunk-KBZKT5PQ.js";
import "./chunk-OBYHRJUR.js";
import {
  d
} from "./chunk-2RTM4ZHS.js";
import "./chunk-UBVDHOW4.js";
import "./chunk-BLWHZOWS.js";
import "./chunk-KACQFA4U.js";
import "./chunk-XOPGXWER.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-COWNIHL5.js";
import "./chunk-OH72SRIK.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import "./chunk-WDH5YZUJ.js";
import "./chunk-ELRBKBPI.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-OSAR3X5M.js";
import "./chunk-FT7S3AKB.js";
import "./chunk-LE46LW35.js";
import "./chunk-DESQE75S.js";
import "./chunk-QKOLWFRE.js";
import "./chunk-YM5PYJO5.js";
import "./chunk-KE5B3PMZ.js";
import "./chunk-L2VQ7IPJ.js";
import "./chunk-K7U6HDB6.js";
import "./chunk-64B6H5RV.js";
import "./chunk-3ECTZ67D.js";
import "./chunk-WHFPT3MI.js";
import "./chunk-Z7ID6LQT.js";
import "./chunk-QDV73XFP.js";
import "./chunk-EN7ZU6UM.js";
import "./chunk-HP3XVAWO.js";
import "./chunk-LJQTXJLJ.js";
import "./chunk-LV4D4M7G.js";
import "./chunk-HFKPIUEB.js";
import "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-7APSGFF5.js";
import "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-A4SZU67B.js";
import "./chunk-Y4FK2QML.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import "./chunk-7KNADJUA.js";
import "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-VL6IMOUO.js";
import "./chunk-YCF7NU4C.js";
import "./chunk-FQ2MMUPL.js";
import {
  h,
  l
} from "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import "./chunk-DUGCD7YI.js";
import {
  a2 as a
} from "./chunk-3CMERT4A.js";
import {
  e
} from "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import "./chunk-7LFT2RDJ.js";
import "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import {
  has
} from "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function n(e2, r) {
  return !e2.visible || 0 !== e2.minScale && r > e2.minScale || 0 !== e2.maxScale && r < e2.maxScale;
}
var l2 = class extends W {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n2 = e2 && (r || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n2}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n2;
  }
  _injectOverrides(e2) {
    let r = super._injectOverrides(e2);
    const s = this.view.scale, i = this.layer.sublayers.filter((e3) => n(e3, s)).map((e3) => e3.subtypeCode);
    if (!i.length)
      return r;
    r = null != r ? r : new d().toJSON();
    const a2 = `NOT ${this.layer.subtypeField} IN (${i.join(",")})`;
    return r.where = r.where ? `(${r.where}) AND (${a2})` : a2, r;
  }
  _setLayersForFeature(e2) {
    const r = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
l2 = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], l2);
var o = l2;
export {
  o as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-I6YACYUV.js.map
