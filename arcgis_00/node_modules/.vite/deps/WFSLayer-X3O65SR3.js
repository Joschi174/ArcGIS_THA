import {
  M as M2,
  S,
  V,
  Y,
  v
} from "./chunk-AYPSI5Z4.js";
import "./chunk-EZFM2V6A.js";
import "./chunk-B5VZ5MGX.js";
import {
  c,
  o as o3
} from "./chunk-PISYP3ZS.js";
import "./chunk-XZUCRWKB.js";
import "./chunk-NUGAWFAM.js";
import "./chunk-KBZKT5PQ.js";
import {
  c as c2
} from "./chunk-4KFSTSVV.js";
import {
  p as p3
} from "./chunk-GOTSAXOX.js";
import "./chunk-2RTM4ZHS.js";
import {
  n as n2
} from "./chunk-QSWXHF7C.js";
import "./chunk-UBVDHOW4.js";
import "./chunk-B6R735ZF.js";
import {
  s as s2
} from "./chunk-BJSER2MD.js";
import {
  i
} from "./chunk-BLWHZOWS.js";
import {
  C
} from "./chunk-KACQFA4U.js";
import "./chunk-GOBOJQPM.js";
import {
  a as a4
} from "./chunk-OWJMBATL.js";
import {
  o as o4
} from "./chunk-YBZ3PNAF.js";
import {
  p as p4
} from "./chunk-Y7FTNVRA.js";
import {
  n,
  p2
} from "./chunk-D7CFF2FH.js";
import "./chunk-S6UQK27H.js";
import "./chunk-XOPGXWER.js";
import {
  j as j2
} from "./chunk-M6X4HWGZ.js";
import {
  p
} from "./chunk-OGDE7T5O.js";
import {
  a as a2
} from "./chunk-62JUI7PG.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import {
  t
} from "./chunk-7N54VP3N.js";
import {
  c as c5
} from "./chunk-UQH37OH4.js";
import {
  O
} from "./chunk-VCOABNMG.js";
import {
  c as c4,
  d as d2,
  f as f3,
  g,
  l,
  m,
  p as p6
} from "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-HSP4VKTO.js";
import "./chunk-COWNIHL5.js";
import {
  d
} from "./chunk-OH72SRIK.js";
import "./chunk-HGK7QSHJ.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-CDH6OAES.js";
import "./chunk-6VMHQJDC.js";
import "./chunk-IIHBYDIT.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import "./chunk-WDH5YZUJ.js";
import {
  b
} from "./chunk-ELRBKBPI.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-HXLO7LC5.js";
import "./chunk-5YQM3GC2.js";
import {
  y as y2
} from "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import {
  f as f2
} from "./chunk-QDV73XFP.js";
import "./chunk-EN7ZU6UM.js";
import "./chunk-4QODSIJL.js";
import "./chunk-HP3XVAWO.js";
import "./chunk-LJQTXJLJ.js";
import {
  k as k2
} from "./chunk-LV4D4M7G.js";
import {
  b as b2
} from "./chunk-ZZC3B6AH.js";
import "./chunk-HFKPIUEB.js";
import "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import {
  c2 as c3,
  p as p5
} from "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-Y2UHC2VM.js";
import "./chunk-7APSGFF5.js";
import "./chunk-S5RFXGTW.js";
import "./chunk-JQTIJ5DI.js";
import "./chunk-7P2S6N4H.js";
import {
  _
} from "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-6DVUGIPD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-A4SZU67B.js";
import {
  a as a3
} from "./chunk-Y4FK2QML.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import {
  o as o2
} from "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import {
  M
} from "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import "./chunk-7KNADJUA.js";
import {
  f,
  r
} from "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-VL6IMOUO.js";
import "./chunk-YCF7NU4C.js";
import "./chunk-FQ2MMUPL.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import {
  y
} from "./chunk-DUGCD7YI.js";
import {
  a2 as a
} from "./chunk-3CMERT4A.js";
import {
  e
} from "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import {
  T
} from "./chunk-7LFT2RDJ.js";
import "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import {
  L
} from "./chunk-RXTTOJU7.js";
import {
  j,
  k
} from "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s3 as s
} from "./chunk-5QASCMFT.js";
import {
  o
} from "./chunk-GHZEFXB4.js";
import {
  has
} from "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var g2 = class extends a3(_) {
  constructor() {
    super(...arguments), this._connection = null, this.capabilities = c(false, false), this.type = "wfs", this.refresh = k(async (e2) => {
      await this.load();
      const { extent: t2 } = await this._connection.invoke("refresh", e2);
      return t2 && (this.sourceJSON.extent = t2), { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e2) {
    const t2 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e2, t2 = {}) {
    await this.load(t2);
    const r2 = await this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2);
    return d.fromJSON(r2);
  }
  async queryFeaturesJSON(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2);
  }
  async queryFeatureCount(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatureCount", e2 ? e2.toJSON() : null, t2);
  }
  async queryObjectIds(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryObjectIds", e2 ? e2.toJSON() : null, t2);
  }
  async queryExtent(e2, t2 = {}) {
    await this.load(t2);
    const r2 = await this._connection.invoke("queryExtent", e2 ? e2.toJSON() : null, t2);
    return { count: r2.count, extent: M.fromJSON(r2.extent) };
  }
  async querySnapping(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("querySnapping", e2, t2);
  }
  async _createLoadOptions(e2) {
    var _a;
    const { url: r2, customParameters: s3, name: o5, namespaceUri: a5, spatialReference: i2, fields: n3, geometryType: c6, swapXY: l2 } = this.layer;
    if (!r2)
      throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await v(r2, { customParameters: s3, ...e2 }));
    const u = ["fields", "geometryType", "name", "namespaceUri", "spatialReference", "swapXY"].some((e3) => null == this.layer[e3]), h = u ? await V(this.wfsCapabilities, o5, a5, { spatialReference: i2, customParameters: s3, signal: e2 == null ? void 0 : e2.signal }) : { ...Y(n3 ?? []), geometryType: c6, name: o5, namespaceUri: a5, spatialReference: i2, swapXY: l2 }, w = M2(this.wfsCapabilities.readFeatureTypes(), h.name, h.namespaceUri), g3 = o2.toJSON(h.geometryType);
    return { customParameters: s3, featureType: w, fields: ((_a = h.fields) == null ? void 0 : _a.map((e3) => e3.toJSON())) ?? [], geometryField: h.geometryField, geometryType: g3, getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url, getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat, objectIdField: h.objectIdField, spatialReference: h.spatialReference.toJSON(), swapXY: !!h.swapXY };
  }
  async _startWorker(e2) {
    const [t2, r2] = await j([this._createLoadOptions(e2), f2("WFSSourceWorker", { ...e2, strategy: has("feature-layers-workers") ? "dedicated" : "local" })]), s3 = t2.error || r2.error || null, o5 = r2.value || null;
    if (s3)
      throw o5 && o5.close(), s3;
    const n3 = t2.value;
    this._connection = r2.value;
    const c6 = (await this._connection.invoke("load", n3, e2)).extent;
    this.sourceJSON = { extent: c6, fields: n3.fields, geometryType: n3.geometryType, objectIdField: n3.objectIdField, geometryField: n3.geometryField, drawingInfo: o3(n3.geometryType), name: n3.featureType.title, wfsInfo: { name: n3.featureType.name, featureUrl: n3.getFeatureUrl, maxFeatures: 3e3, swapXY: n3.swapXY, supportedSpatialReferences: n3.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: n3.featureType.namespaceUri } };
  }
};
e([y()], g2.prototype, "capabilities", void 0), e([y({ constructOnly: true })], g2.prototype, "layer", void 0), e([y()], g2.prototype, "sourceJSON", void 0), e([y()], g2.prototype, "type", void 0), e([y()], g2.prototype, "wfsCapabilities", void 0), g2 = e([a("esri.layers.graphics.sources.WFSSource")], g2);

// node_modules/@arcgis/core/layers/WFSLayer.js
var k3;
var B = s2();
var J = k3 = class extends c2(o4(n2(p3(a2(a4(p(t(c5(j2(O(b2))))))))))) {
  static fromWFSLayerInfo(e2) {
    const { customParameters: r2, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n3, objectIdField: p7, spatialReference: a5, swapXY: l2, url: d3, wfsCapabilities: m2 } = e2;
    return new k3({ customParameters: r2, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n3, objectIdField: p7, spatialReference: a5, swapXY: l2, url: d3, wfsCapabilities: m2 });
  }
  constructor(e2) {
    super(e2), this.copyright = null, this.customParameters = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxFeatures = 3e3, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new g2({ layer: this }), this.spatialReference = f.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e2).then(() => this.source.load(e2)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), c3(this.renderer, this.fieldsIndex), p5(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.capabilities;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e2, r2, t2) {
    const i2 = e2.filter((e3) => e3.name !== S);
    this.geometryField && i2.unshift(new y2({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), o(t2, i2.map((e3) => e3.toJSON()), r2);
  }
  get parsedUrl() {
    return L(this.url);
  }
  set renderer(e2) {
    c3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  get wfsCapabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.wfsCapabilities;
  }
  set wfsCapabilities(e2) {
    this.source && (this.source.wfsCapabilities = e2);
  }
  createPopupTemplate(e2) {
    return p4(this, e2);
  }
  createQuery() {
    const e2 = new b();
    e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1";
    const { timeOffset: r2, timeExtent: t2 } = this;
    return e2.timeExtent = null != r2 && null != t2 ? t2.offset(-r2.value, r2.unit) : t2 || null, e2;
  }
  getFieldDomain(e2, r2) {
    var _a;
    return (_a = this.getField(e2)) == null ? void 0 : _a.domain;
  }
  getField(e2) {
    var _a;
    return (_a = this.fieldsIndex) == null ? void 0 : _a.get(e2);
  }
  queryFeatures(e2, r2) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), r2)).then((e3) => {
      if (e3 == null ? void 0 : e3.features)
        for (const r3 of e3.features)
          r3.layer = r3.sourceLayer = this;
      return e3;
    });
  }
  queryObjectIds(e2, r2) {
    return this.load().then(() => this.source.queryObjectIds(b.from(e2) || this.createQuery(), r2));
  }
  queryFeatureCount(e2, r2) {
    return this.load().then(() => this.source.queryFeatureCount(b.from(e2) || this.createQuery(), r2));
  }
  queryExtent(e2, r2) {
    return this.load().then(() => this.source.queryExtent(b.from(e2) || this.createQuery(), r2));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e2, updates: r2 } = await this.source.refresh(this.customParameters);
      return null != r2 && this.read(r2, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e2;
    } catch {
    }
    return false;
  }
};
e([y({ readOnly: true })], J.prototype, "capabilities", null), e([y({ type: String })], J.prototype, "copyright", void 0), e([y({ readOnly: true })], J.prototype, "createQueryVersion", null), e([y({ json: { name: "wfsInfo.customParameters", write: { overridePolicy: (e2) => ({ enabled: !!(e2 && Object.keys(e2).length > 0), ignoreOrigin: true }) } } })], J.prototype, "customParameters", void 0), e([y({ readOnly: true })], J.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], J.prototype, "definitionExpression", void 0), e([y({ type: String })], J.prototype, "displayField", void 0), e([y(d2)], J.prototype, "elevationInfo", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "featureUrl", void 0), e([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], J.prototype, "fields", void 0), e([r("fields")], J.prototype, "writeFields", null), e([y(B.fieldsIndex)], J.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "extent" } })], J.prototype, "fullExtent", void 0), e([y()], J.prototype, "geometryField", void 0), e([y({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: o2.read }, write: { target: "layerDefinition.geometryType", writer: o2.write, ignoreOrigin: true }, origins: { service: { read: o2.read } } } })], J.prototype, "geometryType", void 0), e([y({ type: String })], J.prototype, "id", void 0), e([y(m)], J.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i }, write: true } })], J.prototype, "labelingInfo", void 0), e([y(c4)], J.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], J.prototype, "listMode", void 0), e([y({ type: String })], J.prototype, "objectIdField", void 0), e([y({ type: ["WFS"] })], J.prototype, "operationalLayerType", void 0), e([y({ type: T, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "maxFeatures", void 0), e([y({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], J.prototype, "mode", void 0), e([y({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "name", void 0), e([y({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "namespaceUri", void 0), e([y(g)], J.prototype, "opacity", void 0), e([y(B.outFields)], J.prototype, "outFields", void 0), e([y({ readOnly: true })], J.prototype, "parsedUrl", null), e([y(p6)], J.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], J.prototype, "popupTemplate", void 0), e([y({ types: p2, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], J.prototype, "renderer", null), e([y(l)], J.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], J.prototype, "source", void 0), e([y({ type: f, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], J.prototype, "spatialReference", void 0), e([y({ readOnly: true, type: [T], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "spatialReferences", void 0), e([y({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "swapXY", void 0), e([y({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], J.prototype, "title", void 0), e([y({ json: { read: false }, readOnly: true })], J.prototype, "type", void 0), e([y(f3)], J.prototype, "url", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "version", void 0), e([y()], J.prototype, "wfsCapabilities", null), J = k3 = e([a("esri.layers.WFSLayer")], J);
var M3 = J;
export {
  M3 as default
};
//# sourceMappingURL=WFSLayer-X3O65SR3.js.map
