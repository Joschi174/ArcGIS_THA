import {
  m
} from "./chunk-Z5YDWWHC.js";
import "./chunk-R4R6OMPI.js";
import {
  i as i2
} from "./chunk-XMD4R4PA.js";
import {
  E,
  Y,
  f as f3
} from "./chunk-SODRFEMW.js";
import {
  e as e3
} from "./chunk-POX3P665.js";
import {
  t as t3
} from "./chunk-ASGBM4KX.js";
import "./chunk-VDZE3Y76.js";
import "./chunk-TLOQJEGE.js";
import "./chunk-IMFP6AK3.js";
import "./chunk-23UO2U2N.js";
import "./chunk-VJFVVRIB.js";
import "./chunk-SSJP5KD5.js";
import "./chunk-CSMMS4NB.js";
import "./chunk-E5YRWFQU.js";
import "./chunk-K5MRFCR6.js";
import "./chunk-UNQFOAUX.js";
import "./chunk-GZLGPJT5.js";
import "./chunk-XBCX74QQ.js";
import "./chunk-NUGAWFAM.js";
import "./chunk-KBZKT5PQ.js";
import "./chunk-B6IMHQ7A.js";
import "./chunk-VXGW7CXZ.js";
import {
  e as e2
} from "./chunk-XNYF4YHK.js";
import {
  i
} from "./chunk-LVYJ3BFD.js";
import {
  l
} from "./chunk-W7NPCP2A.js";
import "./chunk-X5YBKNPQ.js";
import "./chunk-BLWHZOWS.js";
import "./chunk-KACQFA4U.js";
import "./chunk-GOBOJQPM.js";
import {
  a as a4
} from "./chunk-OWJMBATL.js";
import {
  o as o2
} from "./chunk-YBZ3PNAF.js";
import "./chunk-Y7FTNVRA.js";
import "./chunk-D7CFF2FH.js";
import "./chunk-S6UQK27H.js";
import "./chunk-XOPGXWER.js";
import {
  j as j2
} from "./chunk-M6X4HWGZ.js";
import {
  p
} from "./chunk-OGDE7T5O.js";
import {
  a as a2
} from "./chunk-62JUI7PG.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import {
  t as t2
} from "./chunk-7N54VP3N.js";
import {
  c as c3
} from "./chunk-UQH37OH4.js";
import {
  O
} from "./chunk-VCOABNMG.js";
import {
  f as f2
} from "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-HSP4VKTO.js";
import "./chunk-COWNIHL5.js";
import "./chunk-OH72SRIK.js";
import "./chunk-HGK7QSHJ.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-6VMHQJDC.js";
import "./chunk-IIHBYDIT.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import "./chunk-WDH5YZUJ.js";
import "./chunk-ELRBKBPI.js";
import "./chunk-5T5QOUDR.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-HXLO7LC5.js";
import "./chunk-5YQM3GC2.js";
import "./chunk-SUKBNOSX.js";
import "./chunk-3YWKHS6T.js";
import "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-J2OZ3ZPF.js";
import {
  t
} from "./chunk-CCY6NVOX.js";
import {
  c as c2
} from "./chunk-4QODSIJL.js";
import "./chunk-SLFACN5O.js";
import "./chunk-LJQTXJLJ.js";
import "./chunk-LV4D4M7G.js";
import {
  b
} from "./chunk-ZZC3B6AH.js";
import "./chunk-HFKPIUEB.js";
import "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import "./chunk-BS6NX4XB.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-Y2UHC2VM.js";
import "./chunk-7APSGFF5.js";
import "./chunk-S5RFXGTW.js";
import "./chunk-JQTIJ5DI.js";
import "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-6DVUGIPD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import {
  c
} from "./chunk-A4SZU67B.js";
import {
  a as a3
} from "./chunk-Y4FK2QML.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import {
  M
} from "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import {
  o
} from "./chunk-7KNADJUA.js";
import {
  r as r2
} from "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-FQ2MMUPL.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import {
  n2 as n,
  r2 as r,
  y
} from "./chunk-DUGCD7YI.js";
import {
  a2 as a
} from "./chunk-3CMERT4A.js";
import {
  e
} from "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import {
  T
} from "./chunk-7LFT2RDJ.js";
import {
  j
} from "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import {
  d,
  f
} from "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s3 as s
} from "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var q = class extends a2(a4(t2(E(f3(l(c3(j2(O(p(i(o2(a3(b))))))))))))) {
  constructor(...e4) {
    super(...e4), this.dateFieldsTimeReference = null, this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.preferredTimeReference = null, this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e4, r3) {
    return "string" == typeof e4 ? { url: e4, ...r3 } : e4;
  }
  load(e4) {
    const r3 = null != e4 ? e4.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e4).catch(f).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  readImageFormat(e4, r3) {
    const t4 = r3.supportedImageFormatTypes;
    return t4 && t4.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e4, r3, t4, i3) {
    var _a;
    if (!this.loaded || !e4)
      return;
    const o3 = e4.slice().reverse().flatten(({ sublayers: e5 }) => e5 && e5.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && ((_a = this.capabilities.exportMap) == null ? void 0 : _a.supportsDynamicLayers)) {
      const e5 = n(i3.origin);
      if (e5 === r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("service").sublayers;
        s2 = e3(o3, e6, r.SERVICE);
      } else if (e5 > r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("portal-item");
        s2 = e3(o3, e6.sublayers, n(e6.origin));
      }
    }
    const a5 = [], p2 = { writeSublayerStructure: s2, ...i3 };
    let n2 = s2;
    o3.forEach((e5) => {
      const r4 = e5.write({}, p2);
      a5.push(r4), n2 = n2 || "user" === e5.originOf("visible");
    });
    a5.some((e5) => Object.keys(e5).length > 1) && (r3.layers = a5), n2 && (r3.visibleLayers = o3.filter((e5) => e5.visible).map((e5) => e5.id));
  }
  createExportImageParameters(e4, r3, t4, i3) {
    const o3 = i3 && i3.pixelRatio || 1;
    e4 && this.version >= 10 && (e4 = e4.clone().shiftCentralMeridian());
    const s2 = new m({ layer: this, floors: i3 == null ? void 0 : i3.floors, scale: i2({ extent: e4, width: r3 }) * o3 }), a5 = s2.toJSON();
    s2.destroy();
    const p2 = !i3 || !i3.rotation || this.version < 10.3 ? {} : { rotation: -i3.rotation }, n2 = e4 && e4.spatialReference, m2 = n2.wkid || JSON.stringify(n2.toJSON());
    a5.dpi *= o3;
    const l2 = {};
    if (i3 == null ? void 0 : i3.timeExtent) {
      const { start: e5, end: r4 } = i3.timeExtent.toJSON();
      l2.time = e5 && r4 && e5 === r4 ? "" + e5 : `${e5 ?? "null"},${r4 ?? "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l2.time = "null,null");
    return { bbox: e4 && e4.xmin + "," + e4.ymin + "," + e4.xmax + "," + e4.ymax, bboxSR: m2, imageSR: m2, size: r3 + "," + t4, ...a5, ...p2, ...l2 };
  }
  async fetchImage(e4, r3, t4, i3) {
    const { data: o3 } = await this._fetchImage("image", e4, r3, t4, i3);
    return o3;
  }
  async fetchImageBitmap(e4, r3, t4, i3) {
    const { data: o3, url: s2 } = await this._fetchImage("blob", e4, r3, t4, i3);
    return t3(o3, s2, i3 == null ? void 0 : i3.signal);
  }
  async fetchRecomputedExtents(e4 = {}) {
    const i3 = { ...e4, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: o3 } = await j(this.url, i3), { extent: s2, fullExtent: a5, timeExtent: p2 } = o3, n2 = s2 || a5;
    return { fullExtent: n2 && M.fromJSON(n2), timeExtent: p2 && c.fromJSON({ start: p2[0], end: p2[1] }) };
  }
  loadAll() {
    return t(this, (e4) => {
      e4(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e4) {
    return e2(this, e4);
  }
  async _fetchImage(e4, t4, o3, s2, a5) {
    var _a, _b, _c;
    const p2 = { responseType: e4, signal: (a5 == null ? void 0 : a5.signal) ?? null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t4, o3, s2, a5), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, m2 = this.parsedUrl.path + "/export";
    if (null != ((_a = p2.query) == null ? void 0 : _a.dynamicLayers) && !((_c = (_b = this.capabilities) == null ? void 0 : _b.exportMap) == null ? void 0 : _c.supportsDynamicLayers))
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: p2.query });
    try {
      const { data: e5 } = await j(m2, p2);
      return { data: e5, url: m2 };
    } catch (l2) {
      if (d(l2))
        throw l2;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${m2}`, { error: l2 });
    }
  }
  async _fetchService(e4) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t4, ssl: i3 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e4 });
    i3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t4, this.read(t4, { origin: "service", url: this.parsedUrl });
  }
};
e([y({ type: c2 })], q.prototype, "dateFieldsTimeReference", void 0), e([y({ type: Boolean })], q.prototype, "datesInUnknownTimezone", void 0), e([y()], q.prototype, "dpi", void 0), e([y()], q.prototype, "gdbVersion", void 0), e([y()], q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], q.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], q.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], q.prototype, "imageMaxWidth", void 0), e([y()], q.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], q.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], q.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "popupEnabled", void 0), e([y({ type: c2 })], q.prototype, "preferredTimeReference", void 0), e([y()], q.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], q.prototype, "sublayers", void 0), e([r2("sublayers", { layers: { type: [Y] }, visibleLayers: { type: [T] } })], q.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], q.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], q.prototype, "type", void 0), e([y(f2)], q.prototype, "url", void 0), q = e([a("esri.layers.MapImageLayer")], q);
var k = q;
export {
  k as default
};
//# sourceMappingURL=MapImageLayer-KPHRG7ZJ.js.map
