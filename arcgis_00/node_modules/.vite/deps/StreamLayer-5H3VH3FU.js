import {
  p as p4
} from "./chunk-4LMKB4SJ.js";
import "./chunk-2DE2MMH2.js";
import {
  n as n3
} from "./chunk-ILU5UH7D.js";
import "./chunk-6ALTXU4U.js";
import {
  v
} from "./chunk-BPPSEHTY.js";
import {
  s as s3
} from "./chunk-MA4VBNWR.js";
import {
  i
} from "./chunk-UIMMV4OY.js";
import {
  C
} from "./chunk-QZ4HHFPF.js";
import "./chunk-V56SNWAF.js";
import {
  a as a3
} from "./chunk-LLMRDEQF.js";
import {
  o as o4
} from "./chunk-UWP7BCPY.js";
import {
  p as p5
} from "./chunk-QMJALO7W.js";
import {
  n as n2,
  o as o3,
  p2 as p3
} from "./chunk-VRNAR2BU.js";
import "./chunk-IAMROCVA.js";
import "./chunk-7L7U6YJ3.js";
import {
  l as l3
} from "./chunk-NOI4I5TT.js";
import "./chunk-D733RJGU.js";
import "./chunk-QXLGW66I.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import {
  b as b2
} from "./chunk-BY57CSP7.js";
import "./chunk-52ZYWMNY.js";
import "./chunk-FHYNSVC4.js";
import {
  p as p2
} from "./chunk-5BKFA3IG.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-NHDVBH5V.js";
import "./chunk-WLU7KKOI.js";
import "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  t
} from "./chunk-JHVDJNJ7.js";
import {
  j as j2
} from "./chunk-M52YOZDN.js";
import {
  a as a2
} from "./chunk-P5CFKMGO.js";
import "./chunk-2EHBSKAM.js";
import "./chunk-HVBIBP5P.js";
import {
  t as t2
} from "./chunk-VLY2K2HC.js";
import {
  c as c2
} from "./chunk-AVOTXTN2.js";
import {
  O
} from "./chunk-4FGKBJP7.js";
import {
  D,
  I,
  c,
  f as f3,
  l as l2,
  m,
  p
} from "./chunk-LALFHQE3.js";
import {
  h
} from "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-IN5QJ5F4.js";
import {
  y as y2
} from "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import "./chunk-U4IWFNWD.js";
import "./chunk-LCWGEIX7.js";
import "./chunk-RFIIU6XF.js";
import {
  k
} from "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-D76KSV7G.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import {
  c2 as c3,
  p as p6
} from "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-JZBA2N4X.js";
import {
  b
} from "./chunk-4W4V5TBI.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-FVYUULND.js";
import "./chunk-BRRN7CRU.js";
import "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-5XLKQQPP.js";
import "./chunk-3OL5L3LC.js";
import "./chunk-H7C32RFW.js";
import "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import {
  o as o2
} from "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  M
} from "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import {
  f as f2
} from "./chunk-4X5MDDUC.js";
import {
  o
} from "./chunk-UURR7HU3.js";
import {
  l
} from "./chunk-JLE6P4DW.js";
import "./chunk-CL7UAIKB.js";
import "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import {
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a,
  n
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T
} from "./chunk-SF7FIURP.js";
import {
  j
} from "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import "./chunk-TXAS6RAG.js";
import {
  f
} from "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t3;
var i2 = t3 = class extends l {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t3({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
e([y({ type: Number, json: { write: true } })], i2.prototype, "age", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "ageReceived", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "displayCount", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "maxObservations", void 0), i2 = t3 = e([a("esri.layers.support.PurgeOptions")], i2);
var p7 = i2;

// node_modules/@arcgis/core/layers/StreamLayer.js
var Q = s3();
function H(e2, t4) {
  return new s2("layer:unsupported", `Layer (${e2.title}, ${e2.id}) of type '${e2.declaredClass}' ${t4}`, { layer: e2 });
}
var K = class extends n3(p4(a2(a3(t2(p2(l3(c2(j2(O(o4(b))))))))))) {
  constructor(...e2) {
    super(...e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p7(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = f2.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null;
  }
  normalizeCtorArgs(e2, t4) {
    return "string" == typeof e2 ? { url: e2, ...t4 } : e2;
  }
  load(e2) {
    if (!("WebSocket" in globalThis))
      return this.addResolvingPromise(Promise.reject(new s2("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t4 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e2).catch(f).then(() => this._fetchService(t4))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e2) {
    const t4 = this._normalizeFeatureReduction(e2);
    this._set("featureReduction", t4);
  }
  set renderer(e2) {
    c3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  readRenderer(e2, t4, i3) {
    var _a;
    t4 = t4.layerDefinition || t4;
    const o5 = (_a = t4.drawingInfo) == null ? void 0 : _a.renderer;
    if (o5) {
      const e3 = o3(o5, t4, i3) || void 0;
      return e3 || s.getLogger(this).error("Failed to create renderer", { rendererDefinition: t4.drawingInfo.renderer, layer: this, context: i3 }), e3;
    }
    return v(t4, i3);
  }
  async connect(e2) {
    const [{ createConnection: t4 }] = await Promise.all([import("./createConnection-THTQCNAK.js"), this.load()]), r = this.geometryType ? o2.toJSON(this.geometryType) : null, { customParameters: i3 = null, definitionExpression: o5 = null, geometryDefinition: s4 = null, maxReconnectionAttempts: n4 = 0, maxReconnectionInterval: p8 = 20, spatialReference: l4 = this.spatialReference } = e2 || this.createConnectionParameters(), m2 = t4(this.parsedUrl, this.spatialReference, l4, r, { geometry: s4, where: o5 }, n4, p8, i3 ?? void 0), d = n([this.on("send-message-to-socket", (e3) => m2.sendMessageToSocket(e3)), this.on("send-message-to-client", (e3) => m2.sendMessageToClient(e3))]);
    return m2.once("destroy", d.remove), m2;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e2) {
    return p5(this, e2);
  }
  createQuery() {
    const e2 = new b2();
    return e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1", e2;
  }
  getFieldDomain(e2, t4) {
    if (!this.fields)
      return null;
    let r = null;
    return this.fields.some((t5) => (t5.name === e2 && (r = t5.domain), !!r)), r;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  serviceSupportsSpatialReference(e2) {
    return true;
  }
  sendMessageToSocket(e2) {
    this.emit("send-message-to-socket", e2);
  }
  sendMessageToClient(e2) {
    this.emit("send-message-to-client", e2);
  }
  write(e2, t4) {
    const r = t4 == null ? void 0 : t4.messages;
    return this.webSocketUrl ? (r == null ? void 0 : r.push(H(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e2, t4) : (r == null ? void 0 : r.push(H(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e2) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t4 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e2 });
        this.sourceJSON = t4;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField))
        throw new s2("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e3 = (_b = this.fields.find((e4) => "oid" === e4.type)) == null ? void 0 : _b.name;
        if (!e3)
          throw new s2("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e3;
      }
      if (!this.fields)
        throw new s2("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e3) => e3.name === this.objectIdField) || this.fields.push(new y2({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType)
        throw new s2("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), c3(this.renderer, this.fieldsIndex), p6(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = "__esri_stream_id__"), t(this, { origin: "service" });
  }
};
e([y({ type: String })], K.prototype, "copyright", void 0), e([y({ readOnly: true })], K.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], K.prototype, "definitionExpression", void 0), e([y({ type: String })], K.prototype, "displayField", void 0), e([y({ type: h })], K.prototype, "elevationInfo", void 0), e([y({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], K.prototype, "featureReduction", null), e([y(Q.fields)], K.prototype, "fields", void 0), e([y(Q.fieldsIndex)], K.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "layerDefinition.definitionGeometry", write: true } })], K.prototype, "geometryDefinition", void 0), e([y({ type: o2.apiValues, json: { read: { reader: o2.read } } })], K.prototype, "geometryType", void 0), e([y(m)], K.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { read: { source: "layerDefinition.drawingInfo.labelingInfo", reader: i }, write: { target: "layerDefinition.drawingInfo.labelingInfo" } } })], K.prototype, "labelingInfo", void 0), e([y(c)], K.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], K.prototype, "listMode", void 0), e([y({ type: T })], K.prototype, "maxReconnectionAttempts", void 0), e([y({ type: T })], K.prototype, "maxReconnectionInterval", void 0), e([y(D)], K.prototype, "maxScale", void 0), e([y(I)], K.prototype, "minScale", void 0), e([y({ type: String })], K.prototype, "objectIdField", void 0), e([y({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], K.prototype, "operationalLayerType", void 0), e([y(p)], K.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], K.prototype, "popupTemplate", void 0), e([y({ type: p7 })], K.prototype, "purgeOptions", void 0), e([y({ json: { read: false, write: false } })], K.prototype, "refreshInterval", void 0), e([y({ types: p3, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: n2, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], K.prototype, "renderer", null), e([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], K.prototype, "readRenderer", null), e([y(l2)], K.prototype, "screenSizePerspectiveEnabled", void 0), e([y()], K.prototype, "sourceJSON", void 0), e([y({ type: f2, json: { origins: { service: { read: { source: "spatialReference" } } } } })], K.prototype, "spatialReference", void 0), e([y({ json: { read: false } })], K.prototype, "type", void 0), e([y(f3)], K.prototype, "url", void 0), e([y({ type: Number })], K.prototype, "updateInterval", void 0), e([y({ json: { read: false, write: false } })], K.prototype, "useViewTime", void 0), e([y({ type: String })], K.prototype, "webSocketUrl", void 0), K = e([a("esri.layers.StreamLayer")], K);
var X = K;
export {
  X as default
};
//# sourceMappingURL=StreamLayer-5H3VH3FU.js.map
