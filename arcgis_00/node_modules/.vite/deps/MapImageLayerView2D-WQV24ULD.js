import {
  U,
  r
} from "./chunk-JF6EZ3YU.js";
import {
  n
} from "./chunk-NTL4BVMS.js";
import {
  v
} from "./chunk-JN2BGNPI.js";
import {
  a as a3
} from "./chunk-BK5IOASF.js";
import "./chunk-ZU5I6A3X.js";
import {
  a as a2
} from "./chunk-H7V7HYRJ.js";
import {
  d as d2,
  f
} from "./chunk-GJ4AX7TK.js";
import "./chunk-CX6ACZQ7.js";
import {
  oe
} from "./chunk-DILKCB2X.js";
import "./chunk-EZOSZES7.js";
import "./chunk-5EHLOJ6Z.js";
import "./chunk-SS7JZLQV.js";
import "./chunk-6HXKIKIT.js";
import "./chunk-XQSFOYTA.js";
import "./chunk-XGFXC7IN.js";
import "./chunk-2YLUDNP5.js";
import "./chunk-OW4XGQQP.js";
import {
  m
} from "./chunk-XZJ7C22W.js";
import "./chunk-WON6TZX6.js";
import "./chunk-CIERXV2X.js";
import "./chunk-5IYXMCOI.js";
import "./chunk-5OU4ZQ43.js";
import "./chunk-MYZ743ND.js";
import "./chunk-4GVOVKVX.js";
import "./chunk-LQUQFN7F.js";
import "./chunk-AER5JAFS.js";
import "./chunk-7HZ72XIE.js";
import "./chunk-4O2QGREW.js";
import "./chunk-P662BGUZ.js";
import "./chunk-RNMDDDND.js";
import "./chunk-E7T34AFG.js";
import "./chunk-U3JB4DA4.js";
import "./chunk-VR7WK7TF.js";
import "./chunk-BQJY56X4.js";
import "./chunk-4XXKLC7H.js";
import "./chunk-NVZXNBIH.js";
import "./chunk-K6D7DQGC.js";
import "./chunk-CN3PB7HS.js";
import "./chunk-SQZ7ON7Z.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-DSVPEX7K.js";
import "./chunk-PX3Q44FM.js";
import "./chunk-XYJMHUDA.js";
import "./chunk-CSLWFQJE.js";
import "./chunk-PR2OEILG.js";
import "./chunk-XP6ESZGI.js";
import "./chunk-JKPERUTC.js";
import "./chunk-A4HFWKMU.js";
import "./chunk-TDXHXKUI.js";
import "./chunk-BBJLFBMQ.js";
import "./chunk-AZ4FK2MA.js";
import "./chunk-EULDPA4O.js";
import "./chunk-IVABPLLZ.js";
import "./chunk-TBHRKIAA.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-OARQV2FW.js";
import "./chunk-C4L2TGDU.js";
import "./chunk-325OL72R.js";
import "./chunk-EIIX6MK3.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-R6HT3QM2.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-5CJTGLZW.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-YAWND7HF.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-3QLIFMET.js";
import "./chunk-UOQERNSF.js";
import {
  i
} from "./chunk-QVZYEE7F.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-GTOF2BJC.js";
import "./chunk-FQZ2JEHK.js";
import "./chunk-D4SJZ5KN.js";
import "./chunk-A7XI44IB.js";
import "./chunk-R7L5PZPI.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-EL72ISXP.js";
import "./chunk-5KLICR5E.js";
import "./chunk-CKSC27NP.js";
import "./chunk-OVFWVPXL.js";
import "./chunk-WNYS35QN.js";
import "./chunk-VFUAVCAY.js";
import "./chunk-VZAEQ6CY.js";
import "./chunk-SS33L3LC.js";
import "./chunk-X4Y5OF5X.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-URJC76VO.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-6ALTXU4U.js";
import "./chunk-UIMMV4OY.js";
import "./chunk-QZ4HHFPF.js";
import "./chunk-7L7U6YJ3.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-4HDCOJ24.js";
import "./chunk-VY2MIGMV.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-HVBIBP5P.js";
import {
  b
} from "./chunk-LALFHQE3.js";
import "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-U4IWFNWD.js";
import "./chunk-6L4U2AW6.js";
import "./chunk-RFIIU6XF.js";
import "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-BRRN7CRU.js";
import "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import "./chunk-H7C32RFW.js";
import "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import "./chunk-4X5MDDUC.js";
import "./chunk-UURR7HU3.js";
import "./chunk-JLE6P4DW.js";
import "./chunk-CL7UAIKB.js";
import {
  l
} from "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import {
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SF7FIURP.js";
import "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import "./chunk-TXAS6RAG.js";
import {
  d
} from "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s
} from "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var p = (p2) => {
  let a4 = class extends p2 {
    initialize() {
      this.exportImageParameters = new m({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.floors) ?? null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return e([y()], a4.prototype, "exportImageParameters", void 0), e([y({ readOnly: true })], a4.prototype, "floors", null), e([y({ readOnly: true })], a4.prototype, "exportImageVersion", null), e([y()], a4.prototype, "layer", void 0), e([y()], a4.prototype, "suspended", void 0), e([y(b)], a4.prototype, "timeExtent", void 0), a4 = e([a("esri.views.layers.MapImageLayerView")], a4), a4;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var f2 = class extends p(a2(f(d2))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new i(), this._updateHash = "";
  }
  fetchPopupFeatures(t, e2) {
    return this._popupHighlightHelper.fetchPopupFeatures(t, e2);
  }
  update(t) {
    const r2 = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== r2 && (this._updateHash = r2, this.strategy.update(t).catch((t2) => {
      d(t2) || s.getLogger(this).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: e2, version: i2 } = this.layer, s2 = i2 >= 10.3, a4 = i2 >= 10;
    this._bitmapContainer = new a3(), this.container.addChild(this._bitmapContainer), this._highlightView = new oe({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new n(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new U({ createFetchPopupFeaturesQueryGeometry: (t2, e3) => r(t2, e3, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: (t2, e3) => {
      this._highlightView.graphicUpdateHandler({ graphic: t2, property: e3 });
    }, layerView: this, updatingHandles: this.updatingHandles }), this.strategy = new v({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: e2, imageRotationSupported: s2, imageNormalizationSupported: a4, hidpi: true }), this.addAttachHandles(l(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  moveStart() {
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, e2, i2, r2) {
    return this.layer.fetchImage(t, e2, i2, { timeExtent: this.timeExtent, floors: this.floors, ...r2 });
  }
  fetchImageBitmap(t, e2, i2, r2) {
    return this.layer.fetchImageBitmap(t, e2, i2, { timeExtent: this.timeExtent, floors: this.floors, ...r2 });
  }
  highlight(t) {
    return this._popupHighlightHelper.highlight(t);
  }
};
e([y()], f2.prototype, "strategy", void 0), e([y()], f2.prototype, "updating", void 0), f2 = e([a("esri.views.2d.layers.MapImageLayerView2D")], f2);
var w = f2;
export {
  w as default
};
//# sourceMappingURL=MapImageLayerView2D-WQV24ULD.js.map
