import {
  l
} from "./chunk-AEQRO7YN.js";
import {
  d,
  e as e2,
  t
} from "./chunk-LM7G4MIZ.js";
import {
  f,
  h as h2,
  y
} from "./chunk-J6Z5RWCC.js";
import "./chunk-3DKXLUT7.js";
import {
  c
} from "./chunk-6W4QNETY.js";
import "./chunk-SKZVSZDU.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import "./chunk-5YQM3GC2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-QKOLWFRE.js";
import "./chunk-YM5PYJO5.js";
import {
  s as s2
} from "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import {
  h
} from "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import {
  e,
  u
} from "./chunk-KZ7KT6JL.js";
import "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-7APSGFF5.js";
import "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-ZPE6EYJA.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import "./chunk-7KNADJUA.js";
import "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import "./chunk-DUGCD7YI.js";
import "./chunk-3CMERT4A.js";
import "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import "./chunk-7LFT2RDJ.js";
import "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s3 as s
} from "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/support/colorUtils.js
function l2(n) {
  let { r, g: o, b: a, a: e4 } = n;
  return e4 < 1 && (r = Math.round(e4 * r + 255 * (1 - e4)), o = Math.round(e4 * o + 255 * (1 - e4)), a = Math.round(e4 * a + 255 * (1 - e4))), new h({ r, g: o, b: a });
}
function s3(t2, n) {
  const { r, g: o, b: a } = (n == null ? void 0 : n.ignoreAlpha) ? t2 : l2(t2);
  return 0.2126 * r + 0.7152 * o + 0.0722 * a;
}

// node_modules/@arcgis/core/symbols/support/previewSymbol2D.js
var d2 = "picture-fill";
var f2 = "picture-marker";
var y3 = "simple-fill";
var w = "simple-line";
var g = "simple-marker";
var v = "text";
var b = "Aa";
var k = t.size;
var x = t.maxSize;
var z2 = t.maxOutlineSize;
var L = t.lineWidth;
var M = 225;
var j = document.createElement("canvas");
function C(e4, t2) {
  const a = j.getContext("2d"), n = [];
  return t2 && (t2.weight && n.push(t2.weight), t2.size && n.push(t2.size + "px"), t2.family && n.push(t2.family)), a.font = n.join(" "), a.measureText(e4).width;
}
var S = 7.2 / 2.54;
var F = 72 / 2.54;
function U(e4) {
  if (0 === e4.length)
    return 0;
  if (e4.length > 2) {
    const t2 = e(1), a = parseFloat(e4);
    switch (e4.slice(-2)) {
      case "px":
        return a;
      case "pt":
        return a * t2;
      case "in":
        return 72 * a * t2;
      case "pc":
        return 12 * a * t2;
      case "mm":
        return a * S * t2;
      case "cm":
        return a * F * t2;
    }
  }
  return parseFloat(e4);
}
function E(e4) {
  const t2 = e4 == null ? void 0 : e4.size;
  return { width: null != t2 && "object" == typeof t2 && "width" in t2 ? u(t2.width) : null, height: null != t2 && "object" == typeof t2 && "height" in t2 ? u(t2.height) : null };
}
async function Z(e4, t2) {
  const a = t2.fill, n = e4.color;
  if ("pattern" === (a == null ? void 0 : a.type) && n && e4.type !== d2) {
    const e5 = await h2(a.src, n.toCss(true));
    a.src = e5, t2.fill = a;
  }
}
async function q(e4, t2, n, l3) {
  var _a, _b, _c;
  if (!("font" in e4) || !e4.font || "text" !== t2.shape.type)
    return;
  try {
    await c(e4.font);
  } catch {
  }
  const { width: o } = E(l3), i = /[\uE600-\uE6FF]/.test(t2.shape.text);
  null != o || i || (n[0] = C(t2.shape.text, { weight: (_a = t2.font) == null ? void 0 : _a.weight, size: (_b = t2.font) == null ? void 0 : _b.size, family: (_c = t2.font) == null ? void 0 : _c.family }));
}
function D(e4, t2, a, l3, o) {
  var _a;
  if (null != e4.haloColor && null != e4.haloSize) {
    o.masking ?? (o.masking = a.map(() => []));
    const i = u(e4.haloSize);
    l3[0] += i, l3[1] += i, a.unshift([{ ...t2, fill: null, stroke: { color: e4.haloColor, width: 2 * i, join: "round", cap: "round" } }]), o.masking.unshift([{ shape: { type: "rect", x: 0, y: 0, width: l3[0] + 2 * s2, height: l3[1] + 2 * s2 }, fill: [255, 255, 255], stroke: null }, { ...t2, fill: [0, 0, 0, 0], stroke: null }]);
  }
  null == e4.backgroundColor && null == e4.borderLineColor || (l3[0] += 2 * s2, l3[1] += 2 * s2, a.unshift([{ shape: { type: "rect", x: 0, y: 0, width: l3[0], height: l3[1] }, fill: e4.backgroundColor, stroke: { color: e4.borderLineColor, width: u(e4.borderLineSize) } }]), (_a = o.masking) == null ? void 0 : _a.unshift([]));
}
function O(e4, t2) {
  return e4 > t2 ? "dark" : "light";
}
function T(e4, t2) {
  var _a, _b;
  const a = "number" == typeof (t2 == null ? void 0 : t2.size) ? t2 == null ? void 0 : t2.size : null, l3 = null != a ? u(a) : null, s4 = null != (t2 == null ? void 0 : t2.maxSize) ? u(t2.maxSize) : null, r = null != (t2 == null ? void 0 : t2.rotation) ? t2.rotation : "angle" in e4 ? e4.angle : null, u2 = f(e4);
  let h3 = y(e4);
  "dark" !== P(e4, 245) || (t2 == null ? void 0 : t2.ignoreWhiteSymbols) || (h3 = { width: 0.75, ...h3, color: "#bdc3c7" });
  const m = { shape: null, fill: u2, stroke: h3, offset: [0, 0] };
  (h3 == null ? void 0 : h3.width) && (h3.width = Math.min(h3.width, z2));
  const p2 = (h3 == null ? void 0 : h3.width) || 0;
  let M2 = null != (t2 == null ? void 0 : t2.size) && (null == (t2 == null ? void 0 : t2.scale) || (t2 == null ? void 0 : t2.scale)), j2 = 0, S2 = 0, F2 = false;
  switch (e4.type) {
    case g: {
      const a2 = e4.style, { width: o, height: i } = E(t2), c2 = o === i && null != o ? o : null != l3 ? l3 : Math.min(u(e4.size), s4 || x);
      switch (j2 = c2, S2 = c2, a2) {
        case "circle":
          m.shape = { type: "circle", cx: 0, cy: 0, r: 0.5 * c2 }, M2 || (j2 += p2, S2 += p2);
          break;
        case "cross":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0.5 * S2] }, { command: "L", values: [j2, 0.5 * S2] }, { command: "M", values: [0.5 * j2, 0] }, { command: "L", values: [0.5 * j2, S2] }] };
          break;
        case "diamond":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0.5 * S2] }, { command: "L", values: [0.5 * j2, 0] }, { command: "L", values: [j2, 0.5 * S2] }, { command: "L", values: [0.5 * j2, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p2, S2 += p2);
          break;
        case "square":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p2, S2 += p2), r && (F2 = true);
          break;
        case "triangle":
          m.shape = { type: "path", path: [{ command: "M", values: [0.5 * j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p2, S2 += p2), r && (F2 = true);
          break;
        case "x":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, S2] }, { command: "M", values: [j2, 0] }, { command: "L", values: [0, S2] }] }, r && (F2 = true);
          break;
        case "path":
          m.shape = { type: "path", path: e4.path || "" }, M2 || (j2 += p2, S2 += p2), r && (F2 = true), M2 = true;
      }
      break;
    }
    case w: {
      const { width: e5, height: a2 } = E(t2), n = null != a2 ? a2 : null != l3 ? l3 : p2, o = null != e5 ? e5 : L;
      h3 && (h3.width = n), j2 = o, S2 = n;
      const i = ((_a = m == null ? void 0 : m.stroke) == null ? void 0 : _a.cap) || "butt", s5 = "round" === i;
      M2 = true, m.stroke && (m.stroke.cap = "butt" === i ? "square" : i), m.shape = { type: "path", path: [{ command: "M", values: [s5 ? n / 2 : 0, S2 / 2] }, { command: "L", values: [s5 ? j2 - n / 2 : j2, S2 / 2] }] };
      break;
    }
    case d2:
    case y3: {
      const e5 = "object" == typeof (t2 == null ? void 0 : t2.symbolConfig) && !!((_b = t2 == null ? void 0 : t2.symbolConfig) == null ? void 0 : _b.isSquareFill), { width: a2, height: n } = E(t2);
      j2 = !e5 && a2 !== n || null == a2 ? null != l3 ? l3 : k : a2, S2 = !e5 && a2 !== n || null == n ? j2 : n, M2 || (j2 += p2, S2 += p2), M2 = true, m.shape = e5 ? { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "L", values: [0, 0] }, { command: "Z", values: [] }] } : e2.fill[0];
      break;
    }
    case f2: {
      const a2 = Math.min(u(e4.width), s4 || x), o = Math.min(u(e4.height), s4 || x), { width: i, height: c2 } = E(t2), u3 = i === c2 && null != i ? i : null != l3 ? l3 : Math.max(a2, o), h4 = a2 / o;
      j2 = h4 <= 1 ? Math.ceil(u3 * h4) : u3, S2 = h4 <= 1 ? u3 : Math.ceil(u3 / h4), m.shape = { type: "image", x: -Math.round(j2 / 2), y: -Math.round(S2 / 2), width: j2, height: S2, src: e4.url || "" }, r && (F2 = true);
      break;
    }
    case v: {
      const a2 = e4, o = (t2 == null ? void 0 : t2.overrideText) || a2.text || b, i = a2.font, { width: r2, height: c2 } = E(t2), u3 = null != c2 ? c2 : null != l3 ? l3 : Math.min(u(i.size), s4 || x), h4 = C(o, { weight: i.weight, size: u3, family: i.family }), p3 = /[\uE600-\uE6FF]/.test(o);
      j2 = r2 ?? (p3 ? u3 : h4), S2 = u3;
      let d3 = 0.25 * U((i ? u3 : 0).toString());
      p3 && (d3 += 5), m.shape = { type: "text", text: o, x: a2.xoffset || 0, y: a2.yoffset || d3, align: "middle", alignBaseline: a2.verticalAlignment, decoration: i && i.decoration, rotated: a2.rotated, kerning: a2.kerning }, m.font = i && { size: u3, style: i.style, decoration: i.decoration, weight: i.weight, family: i.family };
      break;
    }
  }
  return { shapeDescriptor: m, size: [j2, S2], renderOptions: { node: t2 == null ? void 0 : t2.node, scale: M2, opacity: t2 == null ? void 0 : t2.opacity, rotation: r, useRotationSize: F2, effectView: t2 == null ? void 0 : t2.effectView, ariaLabel: t2 == null ? void 0 : t2.ariaLabel } };
}
async function A(e4, a) {
  var _a;
  const { shapeDescriptor: n, size: l3, renderOptions: o } = T(e4, a);
  if (!n.shape)
    throw new s("symbolPreview: renderPreviewHTML2D", "symbol not supported.");
  await Z(e4, n), await q(e4, n, l3, a);
  const i = [[n]];
  if ("object" == typeof (a == null ? void 0 : a.symbolConfig) && ((_a = a == null ? void 0 : a.symbolConfig) == null ? void 0 : _a.applyColorModulation)) {
    const e5 = 0.6 * l3[0];
    i.unshift([{ ...n, offset: [-e5, 0], fill: d(n.fill, -0.3) }]), i.push([{ ...n, offset: [e5, 0], fill: d(n.fill, 0.3) }]), l3[0] += 2 * e5, o.scale = false;
  }
  return "text" === e4.type && D(e4, n, i, l3, o), l(i, l3, o);
}
function P(t2, a = M) {
  const n = f(t2), l3 = y(t2), s4 = !n || "type" in n ? null : new h(n), r = (l3 == null ? void 0 : l3.color) ? new h(l3 == null ? void 0 : l3.color) : null, c2 = s4 ? O(s3(s4), a) : null, u2 = r ? O(s3(r), a) : null;
  return u2 ? c2 ? c2 === u2 ? c2 : a >= M ? "light" : "dark" : u2 : c2;
}
export {
  P as getContrastingBackgroundTheme,
  T as getRenderSymbolParameters,
  A as previewSymbol2D
};
//# sourceMappingURL=previewSymbol2D-DMX2QVP4.js.map
