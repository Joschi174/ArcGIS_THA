import {
  m
} from "./chunk-XZJ7C22W.js";
import "./chunk-WON6TZX6.js";
import {
  i as i2
} from "./chunk-CIERXV2X.js";
import {
  E,
  Y,
  f as f3
} from "./chunk-HD7TS76B.js";
import {
  e as e3
} from "./chunk-5IYXMCOI.js";
import "./chunk-ZJSWPA2L.js";
import "./chunk-EM5KTVEY.js";
import "./chunk-EZKKNHFJ.js";
import "./chunk-KVDAIVC6.js";
import "./chunk-7NWPWHPA.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-HI2IDU34.js";
import "./chunk-GLQ6HYRE.js";
import "./chunk-C4L2TGDU.js";
import "./chunk-325OL72R.js";
import "./chunk-EIIX6MK3.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import {
  t as t3
} from "./chunk-WKQZXUCD.js";
import "./chunk-JPSSRLNG.js";
import {
  e as e2
} from "./chunk-ZVP2JCAJ.js";
import {
  i
} from "./chunk-LRYQNKYC.js";
import "./chunk-DTFJFPF7.js";
import "./chunk-ODP6NX3Y.js";
import "./chunk-UIMMV4OY.js";
import "./chunk-QZ4HHFPF.js";
import "./chunk-V56SNWAF.js";
import {
  a as a4
} from "./chunk-LLMRDEQF.js";
import {
  o as o2
} from "./chunk-UWP7BCPY.js";
import "./chunk-QMJALO7W.js";
import "./chunk-VRNAR2BU.js";
import "./chunk-IAMROCVA.js";
import "./chunk-7L7U6YJ3.js";
import {
  l
} from "./chunk-NOI4I5TT.js";
import "./chunk-YYGN2GO6.js";
import "./chunk-QXLGW66I.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import "./chunk-ZVOARKLE.js";
import "./chunk-BY57CSP7.js";
import "./chunk-52ZYWMNY.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-4HDCOJ24.js";
import "./chunk-VY2MIGMV.js";
import {
  p
} from "./chunk-5BKFA3IG.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-NHDVBH5V.js";
import "./chunk-WLU7KKOI.js";
import "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  j as j2
} from "./chunk-M52YOZDN.js";
import {
  a as a2
} from "./chunk-P5CFKMGO.js";
import "./chunk-2EHBSKAM.js";
import "./chunk-HVBIBP5P.js";
import {
  t as t2
} from "./chunk-VLY2K2HC.js";
import {
  c as c3
} from "./chunk-AVOTXTN2.js";
import {
  O
} from "./chunk-4FGKBJP7.js";
import {
  f as f2
} from "./chunk-LALFHQE3.js";
import "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-IN5QJ5F4.js";
import "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import "./chunk-XR4HIGQP.js";
import {
  c
} from "./chunk-U4IWFNWD.js";
import "./chunk-LCWGEIX7.js";
import "./chunk-RFIIU6XF.js";
import "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-D76KSV7G.js";
import {
  t
} from "./chunk-2H7DV6BT.js";
import "./chunk-CSKEV5FZ.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-JZBA2N4X.js";
import {
  b
} from "./chunk-4W4V5TBI.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-FVYUULND.js";
import "./chunk-BRRN7CRU.js";
import "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-5XLKQQPP.js";
import {
  a as a3
} from "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import {
  c as c2
} from "./chunk-H7C32RFW.js";
import "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  M
} from "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import {
  r2
} from "./chunk-4X5MDDUC.js";
import {
  o
} from "./chunk-UURR7HU3.js";
import "./chunk-JLE6P4DW.js";
import "./chunk-CL7UAIKB.js";
import "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import {
  n2 as n,
  r2 as r,
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T
} from "./chunk-SF7FIURP.js";
import {
  j
} from "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import "./chunk-TXAS6RAG.js";
import {
  d,
  f
} from "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var q = class extends a2(a4(t2(E(f3(l(c3(j2(O(p(i(o2(a3(b))))))))))))) {
  constructor(...e4) {
    super(...e4), this.dateFieldsTimeReference = null, this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.preferredTimeReference = null, this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e4, r3) {
    return "string" == typeof e4 ? { url: e4, ...r3 } : e4;
  }
  load(e4) {
    const r3 = null != e4 ? e4.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e4).catch(f).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  readImageFormat(e4, r3) {
    const t4 = r3.supportedImageFormatTypes;
    return t4 && t4.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e4, r3, t4, i3) {
    var _a;
    if (!this.loaded || !e4)
      return;
    const o3 = e4.slice().reverse().flatten(({ sublayers: e5 }) => e5 && e5.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && ((_a = this.capabilities.exportMap) == null ? void 0 : _a.supportsDynamicLayers)) {
      const e5 = n(i3.origin);
      if (e5 === r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("service").sublayers;
        s2 = e3(o3, e6, r.SERVICE);
      } else if (e5 > r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("portal-item");
        s2 = e3(o3, e6.sublayers, n(e6.origin));
      }
    }
    const a5 = [], p2 = { writeSublayerStructure: s2, ...i3 };
    let n2 = s2;
    o3.forEach((e5) => {
      const r4 = e5.write({}, p2);
      a5.push(r4), n2 = n2 || "user" === e5.originOf("visible");
    });
    a5.some((e5) => Object.keys(e5).length > 1) && (r3.layers = a5), n2 && (r3.visibleLayers = o3.filter((e5) => e5.visible).map((e5) => e5.id));
  }
  createExportImageParameters(e4, r3, t4, i3) {
    const o3 = i3 && i3.pixelRatio || 1;
    e4 && this.version >= 10 && (e4 = e4.clone().shiftCentralMeridian());
    const s2 = new m({ layer: this, floors: i3 == null ? void 0 : i3.floors, scale: i2({ extent: e4, width: r3 }) * o3 }), a5 = s2.toJSON();
    s2.destroy();
    const p2 = !i3 || !i3.rotation || this.version < 10.3 ? {} : { rotation: -i3.rotation }, n2 = e4 && e4.spatialReference, m2 = n2.wkid || JSON.stringify(n2.toJSON());
    a5.dpi *= o3;
    const l2 = {};
    if (i3 == null ? void 0 : i3.timeExtent) {
      const { start: e5, end: r4 } = i3.timeExtent.toJSON();
      l2.time = e5 && r4 && e5 === r4 ? "" + e5 : `${e5 ?? "null"},${r4 ?? "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l2.time = "null,null");
    return { bbox: e4 && e4.xmin + "," + e4.ymin + "," + e4.xmax + "," + e4.ymax, bboxSR: m2, imageSR: m2, size: r3 + "," + t4, ...a5, ...p2, ...l2 };
  }
  async fetchImage(e4, r3, t4, i3) {
    const { data: o3 } = await this._fetchImage("image", e4, r3, t4, i3);
    return o3;
  }
  async fetchImageBitmap(e4, r3, t4, i3) {
    const { data: o3, url: s2 } = await this._fetchImage("blob", e4, r3, t4, i3);
    return t3(o3, s2, i3 == null ? void 0 : i3.signal);
  }
  async fetchRecomputedExtents(e4 = {}) {
    const i3 = { ...e4, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: o3 } = await j(this.url, i3), { extent: s2, fullExtent: a5, timeExtent: p2 } = o3, n2 = s2 || a5;
    return { fullExtent: n2 && M.fromJSON(n2), timeExtent: p2 && c2.fromJSON({ start: p2[0], end: p2[1] }) };
  }
  loadAll() {
    return t(this, (e4) => {
      e4(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e4) {
    return e2(this, e4);
  }
  async _fetchImage(e4, t4, o3, s2, a5) {
    var _a, _b, _c;
    const p2 = { responseType: e4, signal: (a5 == null ? void 0 : a5.signal) ?? null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t4, o3, s2, a5), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, m2 = this.parsedUrl.path + "/export";
    if (null != ((_a = p2.query) == null ? void 0 : _a.dynamicLayers) && !((_c = (_b = this.capabilities) == null ? void 0 : _b.exportMap) == null ? void 0 : _c.supportsDynamicLayers))
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: p2.query });
    try {
      const { data: e5 } = await j(m2, p2);
      return { data: e5, url: m2 };
    } catch (l2) {
      if (d(l2))
        throw l2;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${m2}`, { error: l2 });
    }
  }
  async _fetchService(e4) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t4, ssl: i3 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e4 });
    i3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t4, this.read(t4, { origin: "service", url: this.parsedUrl });
  }
};
e([y({ type: c })], q.prototype, "dateFieldsTimeReference", void 0), e([y({ type: Boolean })], q.prototype, "datesInUnknownTimezone", void 0), e([y()], q.prototype, "dpi", void 0), e([y()], q.prototype, "gdbVersion", void 0), e([y()], q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], q.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], q.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], q.prototype, "imageMaxWidth", void 0), e([y()], q.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], q.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], q.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "popupEnabled", void 0), e([y({ type: c })], q.prototype, "preferredTimeReference", void 0), e([y()], q.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], q.prototype, "sublayers", void 0), e([r2("sublayers", { layers: { type: [Y] }, visibleLayers: { type: [T] } })], q.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], q.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], q.prototype, "type", void 0), e([y(f2)], q.prototype, "url", void 0), q = e([a("esri.layers.MapImageLayer")], q);
var k = q;
export {
  k as default
};
//# sourceMappingURL=MapImageLayer-2EYIA6HK.js.map
