import {
  s as s2
} from "./chunk-5OSJP66H.js";
import {
  o
} from "./chunk-7XISENE4.js";
import {
  f
} from "./chunk-4X5MDDUC.js";
import {
  l
} from "./chunk-JLE6P4DW.js";
import {
  s
} from "./chunk-JCWF5RB4.js";
import {
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  v
} from "./chunk-SF7FIURP.js";
import "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/rest/networks/support/TraceLocation.js
var p = new s({ startingPoint: "starting-point", barrier: "barrier" });
var i = class extends l {
  constructor(r) {
    super(r), this.globalId = null, this.isFilterBarrier = false, this.percentAlong = null, this.terminalId = null, this.type = null;
  }
};
e([y({ type: String, json: { write: true } })], i.prototype, "globalId", void 0), e([y({ type: Boolean, json: { write: true } })], i.prototype, "isFilterBarrier", void 0), e([y({ type: Number, json: { write: true } })], i.prototype, "percentAlong", void 0), e([y({ type: Number, json: { write: true } })], i.prototype, "terminalId", void 0), e([y({ type: p.apiValues, json: { type: p.jsonValues, read: { reader: p.read, source: "traceLocationType" }, write: { writer: p.write, target: "traceLocationType" } } })], i.prototype, "type", void 0), i = e([a("esri.rest.networks.support.TraceLocation")], i);
var a2 = i;

// node_modules/@arcgis/core/rest/networks/support/TraceParameters.js
var c;
var l2 = c = class extends l {
  static from(t) {
    return v(c, t);
  }
  constructor(t) {
    super(t), this.namedTraceConfigurationGlobalId = null, this.gdbVersion = null, this.traceLocations = [], this.moment = null, this.outSpatialReference = null, this.traceConfiguration = null, this.resultTypes = null, this.traceType = null;
  }
};
e([y({ type: String, json: { read: { source: "traceConfigurationGlobalId" }, write: { target: "traceConfigurationGlobalId" } } })], l2.prototype, "namedTraceConfigurationGlobalId", void 0), e([y({ type: String, json: { write: true } })], l2.prototype, "gdbVersion", void 0), e([y({ type: [a2], json: { write: true } })], l2.prototype, "traceLocations", void 0), e([y({ type: Date, json: { type: Number, write: { writer: (t, o2) => {
  o2.moment = t ? t.getTime() : null;
} } } })], l2.prototype, "moment", void 0), e([y({ type: f, json: { read: false } })], l2.prototype, "outSpatialReference", void 0), e([y({ type: s2, json: { write: true } })], l2.prototype, "traceConfiguration", void 0), e([y({ type: [Object], json: { write: true } })], l2.prototype, "resultTypes", void 0), e([y({ type: o.apiValues, json: { type: o.jsonValues, read: o.read, write: o.write } })], l2.prototype, "traceType", void 0), l2 = c = e([a("esri.rest.networks.support.TraceParameters")], l2);
var u = l2;
export {
  u as default
};
//# sourceMappingURL=TraceParameters-4IGNFUOB.js.map
