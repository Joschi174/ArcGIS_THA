import {
  M as M2,
  S,
  V,
  Y,
  v
} from "./chunk-HVZZRFW4.js";
import "./chunk-PODY5IF6.js";
import "./chunk-I2KJQQFJ.js";
import {
  c as c3,
  o as o3
} from "./chunk-AR75YB2J.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import {
  c as c4
} from "./chunk-PAM4FXDN.js";
import {
  p as p4
} from "./chunk-4LMKB4SJ.js";
import "./chunk-2DE2MMH2.js";
import {
  n as n2
} from "./chunk-ILU5UH7D.js";
import "./chunk-6ALTXU4U.js";
import "./chunk-BPPSEHTY.js";
import {
  s as s2
} from "./chunk-MA4VBNWR.js";
import {
  i
} from "./chunk-UIMMV4OY.js";
import {
  C
} from "./chunk-QZ4HHFPF.js";
import "./chunk-V56SNWAF.js";
import {
  a as a4
} from "./chunk-LLMRDEQF.js";
import {
  o as o4
} from "./chunk-UWP7BCPY.js";
import {
  p as p5
} from "./chunk-QMJALO7W.js";
import {
  n,
  p2 as p3
} from "./chunk-VRNAR2BU.js";
import "./chunk-IAMROCVA.js";
import "./chunk-7L7U6YJ3.js";
import "./chunk-D733RJGU.js";
import {
  d as d2
} from "./chunk-YYGN2GO6.js";
import "./chunk-QXLGW66I.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import {
  b as b2
} from "./chunk-BY57CSP7.js";
import "./chunk-52ZYWMNY.js";
import "./chunk-FHYNSVC4.js";
import {
  p as p2
} from "./chunk-5BKFA3IG.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-NHDVBH5V.js";
import "./chunk-WLU7KKOI.js";
import "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  j as j2
} from "./chunk-M52YOZDN.js";
import {
  a as a2
} from "./chunk-P5CFKMGO.js";
import "./chunk-2EHBSKAM.js";
import "./chunk-HVBIBP5P.js";
import {
  t
} from "./chunk-VLY2K2HC.js";
import {
  c as c2
} from "./chunk-AVOTXTN2.js";
import {
  O
} from "./chunk-4FGKBJP7.js";
import {
  c,
  d,
  f as f2,
  g,
  l,
  m,
  p
} from "./chunk-LALFHQE3.js";
import "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-IN5QJ5F4.js";
import {
  y as y2
} from "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import {
  f as f3
} from "./chunk-HKDZF6LN.js";
import "./chunk-BNNFX45U.js";
import "./chunk-U4IWFNWD.js";
import "./chunk-6L4U2AW6.js";
import "./chunk-LCWGEIX7.js";
import "./chunk-RFIIU6XF.js";
import {
  k as k2
} from "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import {
  c2 as c5,
  p as p6
} from "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-JZBA2N4X.js";
import {
  b
} from "./chunk-4W4V5TBI.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-FVYUULND.js";
import "./chunk-BRRN7CRU.js";
import {
  _
} from "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-5XLKQQPP.js";
import {
  a as a3
} from "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import "./chunk-H7C32RFW.js";
import "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import {
  o as o2
} from "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  M
} from "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import {
  f,
  r2 as r
} from "./chunk-4X5MDDUC.js";
import "./chunk-UURR7HU3.js";
import "./chunk-JLE6P4DW.js";
import "./chunk-OHLUZSH7.js";
import "./chunk-QV5AXXWQ.js";
import "./chunk-CL7UAIKB.js";
import "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import {
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T
} from "./chunk-SF7FIURP.js";
import "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import {
  L
} from "./chunk-TXAS6RAG.js";
import {
  j,
  k
} from "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-JGYHKABU.js";
import {
  o
} from "./chunk-3FXB2ZFK.js";
import {
  has
} from "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var g2 = class extends a3(_) {
  constructor() {
    super(...arguments), this._connection = null, this.capabilities = c3(false, false), this.type = "wfs", this.refresh = k(async (e2) => {
      await this.load();
      const { extent: t2 } = await this._connection.invoke("refresh", e2);
      return t2 && (this.sourceJSON.extent = t2), { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e2) {
    const t2 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e2, t2 = {}) {
    await this.load(t2);
    const r2 = await this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2);
    return d2.fromJSON(r2);
  }
  async queryFeaturesJSON(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2);
  }
  async queryFeatureCount(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatureCount", e2 ? e2.toJSON() : null, t2);
  }
  async queryObjectIds(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryObjectIds", e2 ? e2.toJSON() : null, t2);
  }
  async queryExtent(e2, t2 = {}) {
    await this.load(t2);
    const r2 = await this._connection.invoke("queryExtent", e2 ? e2.toJSON() : null, t2);
    return { count: r2.count, extent: M.fromJSON(r2.extent) };
  }
  async querySnapping(e2, t2 = {}) {
    return await this.load(t2), this._connection.invoke("querySnapping", e2, t2);
  }
  async _createLoadOptions(e2) {
    var _a;
    const { url: r2, customParameters: s3, name: o5, namespaceUri: a5, spatialReference: i2, fields: n3, geometryType: c6, swapXY: l2 } = this.layer;
    if (!r2)
      throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await v(r2, { customParameters: s3, ...e2 }));
    const u = ["fields", "geometryType", "name", "namespaceUri", "spatialReference", "swapXY"].some((e3) => null == this.layer[e3]), h = u ? await V(this.wfsCapabilities, o5, a5, { spatialReference: i2, customParameters: s3, signal: e2 == null ? void 0 : e2.signal }) : { ...Y(n3 ?? []), geometryType: c6, name: o5, namespaceUri: a5, spatialReference: i2, swapXY: l2 }, w = M2(this.wfsCapabilities.readFeatureTypes(), h.name, h.namespaceUri), g3 = o2.toJSON(h.geometryType);
    return { customParameters: s3, featureType: w, fields: ((_a = h.fields) == null ? void 0 : _a.map((e3) => e3.toJSON())) ?? [], geometryField: h.geometryField, geometryType: g3, getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url, getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat, objectIdField: h.objectIdField, spatialReference: h.spatialReference.toJSON(), swapXY: !!h.swapXY };
  }
  async _startWorker(e2) {
    const [t2, r2] = await j([this._createLoadOptions(e2), f3("WFSSourceWorker", { ...e2, strategy: has("feature-layers-workers") ? "dedicated" : "local" })]), s3 = t2.error || r2.error || null, o5 = r2.value || null;
    if (s3)
      throw o5 && o5.close(), s3;
    const n3 = t2.value;
    this._connection = r2.value;
    const c6 = (await this._connection.invoke("load", n3, e2)).extent;
    this.sourceJSON = { extent: c6, fields: n3.fields, geometryType: n3.geometryType, objectIdField: n3.objectIdField, geometryField: n3.geometryField, drawingInfo: o3(n3.geometryType), name: n3.featureType.title, wfsInfo: { name: n3.featureType.name, featureUrl: n3.getFeatureUrl, maxFeatures: 3e3, swapXY: n3.swapXY, supportedSpatialReferences: n3.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: n3.featureType.namespaceUri } };
  }
};
e([y()], g2.prototype, "capabilities", void 0), e([y({ constructOnly: true })], g2.prototype, "layer", void 0), e([y()], g2.prototype, "sourceJSON", void 0), e([y()], g2.prototype, "type", void 0), e([y()], g2.prototype, "wfsCapabilities", void 0), g2 = e([a("esri.layers.graphics.sources.WFSSource")], g2);

// node_modules/@arcgis/core/layers/WFSLayer.js
var k3;
var B = s2();
var J = k3 = class extends c4(o4(n2(p4(a2(a4(p2(t(c2(j2(O(b))))))))))) {
  static fromWFSLayerInfo(e2) {
    const { customParameters: r2, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n3, objectIdField: p7, spatialReference: a5, swapXY: l2, url: d3, wfsCapabilities: m2 } = e2;
    return new k3({ customParameters: r2, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n3, objectIdField: p7, spatialReference: a5, swapXY: l2, url: d3, wfsCapabilities: m2 });
  }
  constructor(e2) {
    super(e2), this.copyright = null, this.customParameters = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxFeatures = 3e3, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new g2({ layer: this }), this.spatialReference = f.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e2).then(() => this.source.load(e2)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), c5(this.renderer, this.fieldsIndex), p6(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.capabilities;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e2, r2, t2) {
    const i2 = e2.filter((e3) => e3.name !== S);
    this.geometryField && i2.unshift(new y2({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), o(t2, i2.map((e3) => e3.toJSON()), r2);
  }
  get parsedUrl() {
    return L(this.url);
  }
  set renderer(e2) {
    c5(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  get wfsCapabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.wfsCapabilities;
  }
  set wfsCapabilities(e2) {
    this.source && (this.source.wfsCapabilities = e2);
  }
  createPopupTemplate(e2) {
    return p5(this, e2);
  }
  createQuery() {
    const e2 = new b2();
    e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1";
    const { timeOffset: r2, timeExtent: t2 } = this;
    return e2.timeExtent = null != r2 && null != t2 ? t2.offset(-r2.value, r2.unit) : t2 || null, e2;
  }
  getFieldDomain(e2, r2) {
    var _a;
    return (_a = this.getField(e2)) == null ? void 0 : _a.domain;
  }
  getField(e2) {
    var _a;
    return (_a = this.fieldsIndex) == null ? void 0 : _a.get(e2);
  }
  queryFeatures(e2, r2) {
    return this.load().then(() => this.source.queryFeatures(b2.from(e2) || this.createQuery(), r2)).then((e3) => {
      if (e3 == null ? void 0 : e3.features)
        for (const r3 of e3.features)
          r3.layer = r3.sourceLayer = this;
      return e3;
    });
  }
  queryObjectIds(e2, r2) {
    return this.load().then(() => this.source.queryObjectIds(b2.from(e2) || this.createQuery(), r2));
  }
  queryFeatureCount(e2, r2) {
    return this.load().then(() => this.source.queryFeatureCount(b2.from(e2) || this.createQuery(), r2));
  }
  queryExtent(e2, r2) {
    return this.load().then(() => this.source.queryExtent(b2.from(e2) || this.createQuery(), r2));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e2, updates: r2 } = await this.source.refresh(this.customParameters);
      return null != r2 && this.read(r2, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e2;
    } catch {
    }
    return false;
  }
};
e([y({ readOnly: true })], J.prototype, "capabilities", null), e([y({ type: String })], J.prototype, "copyright", void 0), e([y({ readOnly: true })], J.prototype, "createQueryVersion", null), e([y({ json: { name: "wfsInfo.customParameters", write: { overridePolicy: (e2) => ({ enabled: !!(e2 && Object.keys(e2).length > 0), ignoreOrigin: true }) } } })], J.prototype, "customParameters", void 0), e([y({ readOnly: true })], J.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], J.prototype, "definitionExpression", void 0), e([y({ type: String })], J.prototype, "displayField", void 0), e([y(d)], J.prototype, "elevationInfo", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "featureUrl", void 0), e([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], J.prototype, "fields", void 0), e([r("fields")], J.prototype, "writeFields", null), e([y(B.fieldsIndex)], J.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "extent" } })], J.prototype, "fullExtent", void 0), e([y()], J.prototype, "geometryField", void 0), e([y({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: o2.read }, write: { target: "layerDefinition.geometryType", writer: o2.write, ignoreOrigin: true }, origins: { service: { read: o2.read } } } })], J.prototype, "geometryType", void 0), e([y({ type: String })], J.prototype, "id", void 0), e([y(m)], J.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i }, write: true } })], J.prototype, "labelingInfo", void 0), e([y(c)], J.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], J.prototype, "listMode", void 0), e([y({ type: String })], J.prototype, "objectIdField", void 0), e([y({ type: ["WFS"] })], J.prototype, "operationalLayerType", void 0), e([y({ type: T, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "maxFeatures", void 0), e([y({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], J.prototype, "mode", void 0), e([y({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "name", void 0), e([y({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "namespaceUri", void 0), e([y(g)], J.prototype, "opacity", void 0), e([y(B.outFields)], J.prototype, "outFields", void 0), e([y({ readOnly: true })], J.prototype, "parsedUrl", null), e([y(p)], J.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], J.prototype, "popupTemplate", void 0), e([y({ types: p3, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], J.prototype, "renderer", null), e([y(l)], J.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], J.prototype, "source", void 0), e([y({ type: f, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], J.prototype, "spatialReference", void 0), e([y({ readOnly: true, type: [T], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "spatialReferences", void 0), e([y({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "swapXY", void 0), e([y({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], J.prototype, "title", void 0), e([y({ json: { read: false }, readOnly: true })], J.prototype, "type", void 0), e([y(f2)], J.prototype, "url", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], J.prototype, "version", void 0), e([y()], J.prototype, "wfsCapabilities", null), J = k3 = e([a("esri.layers.WFSLayer")], J);
var M3 = J;
export {
  M3 as default
};
//# sourceMappingURL=WFSLayer-4O2EOU5P.js.map
