import {
  r
} from "./chunk-VINDTE3A.js";
import {
  o
} from "./chunk-3NQC7OSH.js";
import {
  i as i2
} from "./chunk-E7DVLVY2.js";
import "./chunk-QVXMNY6H.js";
import {
  Be
} from "./chunk-ZM5VNAIS.js";
import "./chunk-4KFSTSVV.js";
import "./chunk-GOTSAXOX.js";
import "./chunk-2RTM4ZHS.js";
import "./chunk-QSWXHF7C.js";
import "./chunk-UBVDHOW4.js";
import "./chunk-B6IMHQ7A.js";
import "./chunk-NONDLDDV.js";
import "./chunk-VXGW7CXZ.js";
import "./chunk-XNYF4YHK.js";
import "./chunk-LVYJ3BFD.js";
import "./chunk-W7NPCP2A.js";
import "./chunk-B6R735ZF.js";
import "./chunk-BJSER2MD.js";
import "./chunk-X5YBKNPQ.js";
import "./chunk-BLWHZOWS.js";
import "./chunk-KACQFA4U.js";
import "./chunk-GOBOJQPM.js";
import "./chunk-OWJMBATL.js";
import "./chunk-YBZ3PNAF.js";
import "./chunk-Y7FTNVRA.js";
import "./chunk-D7CFF2FH.js";
import "./chunk-S6UQK27H.js";
import "./chunk-XOPGXWER.js";
import "./chunk-M6X4HWGZ.js";
import "./chunk-OGDE7T5O.js";
import "./chunk-62JUI7PG.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import "./chunk-7N54VP3N.js";
import "./chunk-UQH37OH4.js";
import "./chunk-VCOABNMG.js";
import "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-AWZZYYVR.js";
import "./chunk-HSP4VKTO.js";
import "./chunk-COWNIHL5.js";
import "./chunk-OH72SRIK.js";
import "./chunk-75B6UJRJ.js";
import "./chunk-HGK7QSHJ.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-CDH6OAES.js";
import "./chunk-N2FT2B4P.js";
import "./chunk-LLKNYARI.js";
import {
  a as a2,
  i,
  l,
  u
} from "./chunk-6VMHQJDC.js";
import "./chunk-IIHBYDIT.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import "./chunk-WDH5YZUJ.js";
import "./chunk-ELRBKBPI.js";
import "./chunk-5T5QOUDR.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-HXLO7LC5.js";
import "./chunk-5YQM3GC2.js";
import "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-ZFHT67PQ.js";
import "./chunk-QDV73XFP.js";
import "./chunk-EN7ZU6UM.js";
import "./chunk-4QODSIJL.js";
import "./chunk-HP3XVAWO.js";
import "./chunk-LJQTXJLJ.js";
import "./chunk-LV4D4M7G.js";
import "./chunk-ZZC3B6AH.js";
import "./chunk-HFKPIUEB.js";
import {
  d,
  p
} from "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import {
  p as p2
} from "./chunk-BS6NX4XB.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-Y2UHC2VM.js";
import "./chunk-7APSGFF5.js";
import "./chunk-S5RFXGTW.js";
import {
  x
} from "./chunk-JQTIJ5DI.js";
import {
  j as j2
} from "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-6DVUGIPD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-A4SZU67B.js";
import "./chunk-Y4FK2QML.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import "./chunk-7KNADJUA.js";
import "./chunk-NMXESCE4.js";
import "./chunk-O6HKLIZS.js";
import "./chunk-VL6IMOUO.js";
import "./chunk-YCF7NU4C.js";
import "./chunk-FQ2MMUPL.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import "./chunk-DUGCD7YI.js";
import "./chunk-3CMERT4A.js";
import "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import "./chunk-7LFT2RDJ.js";
import "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import {
  j,
  k
} from "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import {
  a
} from "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/save/featureLayerUtils.js
var v = s.getLogger("esri.layers.FeatureLayer");
var b = "Feature Service";
function I(e, t) {
  return `Layer (title: ${e.title}, id: ${e.id}) of type '${e.declaredClass}' ${t}`;
}
function S(e, r2) {
  if (r2.type !== b)
    throw new s2("feature-layer:portal-item-wrong-type", I(e, `should have portal item of type "${b}"`));
}
async function g(e) {
  if (await e.load(), p(e))
    throw new s2("feature-layer:save", I(e, "using an in-memory source cannot be saved to a portal item"));
}
function j3(e, r2) {
  let a3 = (e.messages ?? []).filter(({ type: e2 }) => "error" === e2).map(({ name: e2, message: r3, details: a4 }) => new s2(e2, r3, a4));
  if ((r2 == null ? void 0 : r2.ignoreUnsupported) && (a3 = a3.filter(({ name: e2 }) => "layer:unsupported" !== e2 && "symbol:unsupported" !== e2 && "symbol-layer:unsupported" !== e2 && "property:unsupported" !== e2 && "url:unsupported" !== e2)), a3.length > 0)
    throw new s2("feature-layer:save", "Failed to save feature layer due to unsupported or invalid content. See 'details.errors' for more detailed information", { errors: a3 });
}
async function L(e, t, r2) {
  "beforeSave" in e && "function" == typeof e.beforeSave && await e.beforeSave();
  const a3 = e.write({}, t);
  return j3(t, r2), a3;
}
function P(e) {
  const { layer: t, layerJSON: r2 } = e;
  return t.isTable ? { layers: [], tables: [r2] } : { layers: [r2], tables: [] };
}
function J(e) {
  i(e, l.JSAPI), e.typeKeywords && (e.typeKeywords = e.typeKeywords.filter((e2, t, r2) => r2.indexOf(e2) === t));
}
function N(e) {
  const r2 = e.portalItem;
  if (!r2)
    throw v.error("save: requires the portalItem property to be set"), new s2("feature-layer:portal-item-not-set", I(e, "requires the portalItem property to be set"));
  if (!r2.loaded)
    throw new s2("feature-layer:portal-item-not-loaded", I(e, "cannot be saved to a portal item that does not exist or is inaccessible"));
  S(e, r2);
}
async function O(e, t) {
  return /\/\d+\/?$/.test(e.url ?? "") ? P(t[0]) : E(e, t);
}
async function E(e, t) {
  const { layer: { url: r2, customParameters: a3, apiKey: o2 } } = t[0];
  let l2 = await e.fetchData("json");
  l2 && null != l2.layers && null != l2.tables || (l2 = await T(l2, { url: r2 ?? "", customParameters: a3, apiKey: o2 }, t.map((e2) => e2.layer.layerId)));
  for (const s3 of t)
    A(s3.layer, s3.layerJSON, l2);
  return l2;
}
async function T(e, t, r2) {
  e || (e = {}), e.layers || (e.layers = []), e.tables || (e.tables = []);
  const { url: a3, customParameters: o2, apiKey: l2 } = t, { serviceJSON: s3, layersJSON: n } = await r(a3, { customParameters: o2, apiKey: l2 }), u2 = $(e.layers, s3.layers, r2), p3 = $(e.tables, s3.tables, r2);
  e.layers = u2.itemResources, e.tables = p3.itemResources;
  const c = [...u2.added, ...p3.added], d2 = n ? [...n.layers, ...n.tables] : [];
  return await x2(e, c, a3, d2), e;
}
function $(t, r2, a3) {
  const o2 = a(t, r2, (e, t2) => e.id === t2.id);
  t = t.filter((e) => !o2.removed.some((t2) => t2.id === e.id));
  const l2 = o2.added.map(({ id: e }) => ({ id: e }));
  return l2.forEach(({ id: e }) => {
    t.push({ id: e });
  }), { itemResources: t, added: l2.filter(({ id: e }) => !a3.includes(e)) };
}
async function x2(e, t, r2, a3) {
  const l2 = t.map(({ id: e2 }) => new Be({ url: r2, layerId: e2, sourceJSON: a3.find(({ id: t2 }) => t2 === e2) }));
  await j(l2.map((e2) => e2.load())), l2.forEach((t2) => {
    const { layerId: r3, loaded: a4, defaultPopupTemplate: o2 } = t2;
    if (!a4 || null == o2)
      return;
    A(t2, { id: r3, popupInfo: o2.toJSON() }, e);
  });
}
function A(e, t, r2) {
  e.isTable ? U(r2.tables, t) : U(r2.layers, t);
}
function U(e, t) {
  if (!e)
    return;
  const r2 = e.findIndex(({ id: e2 }) => e2 === t.id);
  -1 === r2 ? e.push(t) : e[r2] = t;
}
function K(e) {
  const { portalItem: t } = e;
  return d(e) && !e.dynamicDataSource && !!(t == null ? void 0 : t.loaded) && t.type === b;
}
async function F(e) {
  if (!(e == null ? void 0 : e.length))
    throw new s2("feature-layer-utils-saveall:missing-parameters", "'layers' array should contain at least one feature layer");
  await Promise.all(e.map((e2) => e2.load()));
  for (const o2 of e)
    if (!K(o2))
      throw new s2("feature-layer-utils-saveall:invalid-parameters", `'layers' array should only contain layers or tables in a feature service loaded from 'Feature Service' item. ${I(o2, "does not conform")}`, { layer: o2 });
  const r2 = e.map((e2) => e2.portalItem.id);
  if (new Set(r2).size > 1)
    throw new s2("feature-layer-utils-saveall:invalid-parameters", "All layers in the 'layers' array should be loaded from the same portal item");
  const a3 = e.map((e2) => e2.layerId);
  if (new Set(a3).size !== a3.length)
    throw new s2("feature-layer-utils-saveall:invalid-parameters", "'layers' array should contain only one instance each of layer or table in a feature service");
}
function R(e, t) {
  let r2 = x.from(t);
  return r2.id && (r2 = r2.clone(), r2.id = null), r2.type ?? (r2.type = b), r2.portal ?? (r2.portal = j2.getDefault()), S(e, r2), r2;
}
async function D(e, t) {
  const { url: r2, layerId: a3, title: o2, fullExtent: l2, isTable: s3 } = e, i3 = p2(r2), u2 = null != i3 && "FeatureServer" === i3.serverType;
  t.url = u2 ? r2 : `${r2}/${a3}`, t.title || (t.title = o2), t.extent = null, s3 || null == l2 || (t.extent = await a2(l2)), u(t, l.METADATA), u(t, l.MULTI_LAYER), i(t, l.SINGLE_LAYER), s3 && i(t, l.TABLE), J(t);
}
async function q(e, t, r2) {
  var _a;
  const a3 = e.portal;
  await (a3 == null ? void 0 : a3.signIn()), await ((_a = a3 == null ? void 0 : a3.user) == null ? void 0 : _a.addItem({ item: e, data: t, folder: r2 == null ? void 0 : r2.folder }));
}
var z = k(C);
async function C(e, t) {
  await g(e), N(e);
  const r2 = e.portalItem, a3 = o(r2), o2 = await L(e, a3, t), s3 = await O(r2, [{ layer: e, layerJSON: o2 }]);
  return J(r2), await r2.update({ data: s3 }), i2(a3), r2;
}
var M = k(async (e, t) => {
  await F(e);
  const r2 = e[0].portalItem, a3 = o(r2), o2 = await Promise.all(e.map((e2) => L(e2, a3, t))), s3 = await O(r2, e.map((e2, t2) => ({ layer: e2, layerJSON: o2[t2] })));
  return J(r2), await r2.update({ data: s3 }), await Promise.all(e.slice(1).map((e2) => e2.portalItem.reload())), i2(a3), r2.clone();
});
var Y = k(_);
async function _(e, t, r2) {
  await g(e);
  const a3 = R(e, t), o2 = o(a3), s3 = P({ layer: e, layerJSON: await L(e, o2, r2) });
  return await D(e, a3), await q(a3, s3, r2), e.portalItem = a3, i2(o2), a3;
}
export {
  z as save,
  M as saveAll,
  Y as saveAs
};
//# sourceMappingURL=featureLayerUtils-M7RDXWTT.js.map
