import {
  p as p3
} from "./chunk-GOTSAXOX.js";
import "./chunk-2RTM4ZHS.js";
import {
  n as n3
} from "./chunk-QSWXHF7C.js";
import "./chunk-UBVDHOW4.js";
import {
  l as l2
} from "./chunk-W7NPCP2A.js";
import {
  v
} from "./chunk-B6R735ZF.js";
import {
  s as s3
} from "./chunk-BJSER2MD.js";
import {
  i
} from "./chunk-BLWHZOWS.js";
import {
  C
} from "./chunk-KACQFA4U.js";
import "./chunk-GOBOJQPM.js";
import {
  a as a3
} from "./chunk-OWJMBATL.js";
import {
  o as o4
} from "./chunk-YBZ3PNAF.js";
import {
  p as p4
} from "./chunk-Y7FTNVRA.js";
import {
  n as n2,
  o as o3,
  p2
} from "./chunk-D7CFF2FH.js";
import "./chunk-S6UQK27H.js";
import "./chunk-XOPGXWER.js";
import {
  j as j2
} from "./chunk-M6X4HWGZ.js";
import {
  p
} from "./chunk-OGDE7T5O.js";
import {
  a as a2
} from "./chunk-62JUI7PG.js";
import "./chunk-2DUFLNG7.js";
import "./chunk-T2F2N6HP.js";
import {
  t
} from "./chunk-7N54VP3N.js";
import {
  c as c3
} from "./chunk-UQH37OH4.js";
import {
  O
} from "./chunk-VCOABNMG.js";
import {
  D,
  I,
  c as c2,
  f as f3,
  l as l3,
  m,
  p as p6
} from "./chunk-HJI3BY6O.js";
import "./chunk-UUGV6AYJ.js";
import "./chunk-HSP4VKTO.js";
import "./chunk-COWNIHL5.js";
import "./chunk-HGK7QSHJ.js";
import "./chunk-FAXVWHOJ.js";
import "./chunk-4RXG3COO.js";
import "./chunk-CDH6OAES.js";
import {
  t as t2
} from "./chunk-LLKNYARI.js";
import "./chunk-6VMHQJDC.js";
import "./chunk-IIHBYDIT.js";
import "./chunk-L45WQWKV.js";
import "./chunk-EWJFH5BC.js";
import {
  h
} from "./chunk-WDH5YZUJ.js";
import {
  b
} from "./chunk-ELRBKBPI.js";
import "./chunk-5NTMYKFL.js";
import "./chunk-Z3LFAOG6.js";
import "./chunk-OYV6FNKL.js";
import "./chunk-HXLO7LC5.js";
import "./chunk-5YQM3GC2.js";
import {
  y as y2
} from "./chunk-TQ73QHGP.js";
import "./chunk-5EIAXFYU.js";
import "./chunk-SBPJCNL2.js";
import "./chunk-TEW7IDMC.js";
import "./chunk-4QODSIJL.js";
import "./chunk-LJQTXJLJ.js";
import {
  k
} from "./chunk-LV4D4M7G.js";
import {
  b as b2
} from "./chunk-ZZC3B6AH.js";
import "./chunk-HFKPIUEB.js";
import "./chunk-OB7XGIVW.js";
import "./chunk-TOTT47W3.js";
import "./chunk-WYSOLO6F.js";
import "./chunk-DSRRGXQP.js";
import "./chunk-6WLIVBPN.js";
import "./chunk-WAWVWQWY.js";
import "./chunk-7XK4IPKN.js";
import "./chunk-3S6PFVBD.js";
import "./chunk-JRV5JJCY.js";
import "./chunk-BS6NX4XB.js";
import "./chunk-A7HIXRLM.js";
import "./chunk-IJCLSAKS.js";
import "./chunk-HXG3EAGH.js";
import "./chunk-KZ7KT6JL.js";
import {
  c2 as c,
  p as p5
} from "./chunk-PSEOYXGU.js";
import "./chunk-PDYDTTO6.js";
import "./chunk-V65JFJHR.js";
import "./chunk-Y2UHC2VM.js";
import "./chunk-7APSGFF5.js";
import "./chunk-S5RFXGTW.js";
import "./chunk-JQTIJ5DI.js";
import "./chunk-7P2S6N4H.js";
import "./chunk-6PE6O23W.js";
import "./chunk-BI26XH27.js";
import "./chunk-PPY3JRDD.js";
import "./chunk-6DVUGIPD.js";
import "./chunk-3HEHFNVB.js";
import "./chunk-Z3LDBFKX.js";
import "./chunk-A4SZU67B.js";
import "./chunk-V2A2K5J6.js";
import "./chunk-VEIPKRDL.js";
import {
  o as o2
} from "./chunk-2T74GJVJ.js";
import "./chunk-6VWXQUWW.js";
import "./chunk-WNCSTS7O.js";
import "./chunk-JU2JBJRJ.js";
import "./chunk-CBBETCDS.js";
import "./chunk-D3IA7B5F.js";
import "./chunk-RKDN5PXO.js";
import "./chunk-UILB2BFY.js";
import {
  M
} from "./chunk-U4PYQFWE.js";
import "./chunk-FNONMLXB.js";
import {
  o
} from "./chunk-7KNADJUA.js";
import {
  f as f2
} from "./chunk-NMXESCE4.js";
import {
  l
} from "./chunk-O6HKLIZS.js";
import "./chunk-FQ2MMUPL.js";
import "./chunk-FQMVGWVJ.js";
import "./chunk-VXRBE6UP.js";
import "./chunk-2IPRPVVF.js";
import "./chunk-YJ7LTVO5.js";
import "./chunk-OICH3FD6.js";
import "./chunk-DNUHV7J4.js";
import "./chunk-RRCNLKGG.js";
import "./chunk-RJHZ4FSH.js";
import {
  y
} from "./chunk-DUGCD7YI.js";
import {
  a2 as a,
  n
} from "./chunk-3CMERT4A.js";
import {
  e
} from "./chunk-ZQWMLUHC.js";
import "./chunk-G5A25MBN.js";
import {
  T
} from "./chunk-7LFT2RDJ.js";
import {
  j
} from "./chunk-QPWNDO2C.js";
import "./chunk-CA2PXGXL.js";
import "./chunk-RXTTOJU7.js";
import {
  f
} from "./chunk-4HAMAX2C.js";
import "./chunk-3QT5L2OK.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-5QASCMFT.js";
import "./chunk-GHZEFXB4.js";
import "./chunk-5G3YEFQP.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t3;
var i2 = t3 = class extends l {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t3({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
e([y({ type: Number, json: { write: true } })], i2.prototype, "age", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "ageReceived", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "displayCount", void 0), e([y({ type: Number, json: { write: true } })], i2.prototype, "maxObservations", void 0), i2 = t3 = e([a("esri.layers.support.PurgeOptions")], i2);
var p7 = i2;

// node_modules/@arcgis/core/layers/StreamLayer.js
var Q = s3();
function H(e2, t4) {
  return new s2("layer:unsupported", `Layer (${e2.title}, ${e2.id}) of type '${e2.declaredClass}' ${t4}`, { layer: e2 });
}
var K = class extends n3(p3(a2(a3(t(p(l2(c3(j2(O(o4(b2))))))))))) {
  constructor(...e2) {
    super(...e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p7(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = f2.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null;
  }
  normalizeCtorArgs(e2, t4) {
    return "string" == typeof e2 ? { url: e2, ...t4 } : e2;
  }
  load(e2) {
    if (!("WebSocket" in globalThis))
      return this.addResolvingPromise(Promise.reject(new s2("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t4 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e2).catch(f).then(() => this._fetchService(t4))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e2) {
    const t4 = this._normalizeFeatureReduction(e2);
    this._set("featureReduction", t4);
  }
  set renderer(e2) {
    c(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  readRenderer(e2, t4, i3) {
    var _a;
    t4 = t4.layerDefinition || t4;
    const o5 = (_a = t4.drawingInfo) == null ? void 0 : _a.renderer;
    if (o5) {
      const e3 = o3(o5, t4, i3) || void 0;
      return e3 || s.getLogger(this).error("Failed to create renderer", { rendererDefinition: t4.drawingInfo.renderer, layer: this, context: i3 }), e3;
    }
    return v(t4, i3);
  }
  async connect(e2) {
    const [{ createConnection: t4 }] = await Promise.all([import("./createConnection-ENXNNH7T.js"), this.load()]), r = this.geometryType ? o2.toJSON(this.geometryType) : null, { customParameters: i3 = null, definitionExpression: o5 = null, geometryDefinition: s4 = null, maxReconnectionAttempts: n4 = 0, maxReconnectionInterval: p8 = 20, spatialReference: l4 = this.spatialReference } = e2 || this.createConnectionParameters(), m2 = t4(this.parsedUrl, this.spatialReference, l4, r, { geometry: s4, where: o5 }, n4, p8, i3 ?? void 0), d = n([this.on("send-message-to-socket", (e3) => m2.sendMessageToSocket(e3)), this.on("send-message-to-client", (e3) => m2.sendMessageToClient(e3))]);
    return m2.once("destroy", d.remove), m2;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e2) {
    return p4(this, e2);
  }
  createQuery() {
    const e2 = new b();
    return e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1", e2;
  }
  getFieldDomain(e2, t4) {
    if (!this.fields)
      return null;
    let r = null;
    return this.fields.some((t5) => (t5.name === e2 && (r = t5.domain), !!r)), r;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  serviceSupportsSpatialReference(e2) {
    return true;
  }
  sendMessageToSocket(e2) {
    this.emit("send-message-to-socket", e2);
  }
  sendMessageToClient(e2) {
    this.emit("send-message-to-client", e2);
  }
  write(e2, t4) {
    const r = t4 == null ? void 0 : t4.messages;
    return this.webSocketUrl ? (r == null ? void 0 : r.push(H(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e2, t4) : (r == null ? void 0 : r.push(H(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e2) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t4 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e2 });
        this.sourceJSON = t4;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField))
        throw new s2("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e3 = (_b = this.fields.find((e4) => "oid" === e4.type)) == null ? void 0 : _b.name;
        if (!e3)
          throw new s2("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e3;
      }
      if (!this.fields)
        throw new s2("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e3) => e3.name === this.objectIdField) || this.fields.push(new y2({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType)
        throw new s2("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), c(this.renderer, this.fieldsIndex), p5(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = "__esri_stream_id__"), t2(this, { origin: "service" });
  }
};
e([y({ type: String })], K.prototype, "copyright", void 0), e([y({ readOnly: true })], K.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], K.prototype, "definitionExpression", void 0), e([y({ type: String })], K.prototype, "displayField", void 0), e([y({ type: h })], K.prototype, "elevationInfo", void 0), e([y({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], K.prototype, "featureReduction", null), e([y(Q.fields)], K.prototype, "fields", void 0), e([y(Q.fieldsIndex)], K.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "layerDefinition.definitionGeometry", write: true } })], K.prototype, "geometryDefinition", void 0), e([y({ type: o2.apiValues, json: { read: { reader: o2.read } } })], K.prototype, "geometryType", void 0), e([y(m)], K.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { read: { source: "layerDefinition.drawingInfo.labelingInfo", reader: i }, write: { target: "layerDefinition.drawingInfo.labelingInfo" } } })], K.prototype, "labelingInfo", void 0), e([y(c2)], K.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], K.prototype, "listMode", void 0), e([y({ type: T })], K.prototype, "maxReconnectionAttempts", void 0), e([y({ type: T })], K.prototype, "maxReconnectionInterval", void 0), e([y(D)], K.prototype, "maxScale", void 0), e([y(I)], K.prototype, "minScale", void 0), e([y({ type: String })], K.prototype, "objectIdField", void 0), e([y({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], K.prototype, "operationalLayerType", void 0), e([y(p6)], K.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], K.prototype, "popupTemplate", void 0), e([y({ type: p7 })], K.prototype, "purgeOptions", void 0), e([y({ json: { read: false, write: false } })], K.prototype, "refreshInterval", void 0), e([y({ types: p2, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: n2, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], K.prototype, "renderer", null), e([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], K.prototype, "readRenderer", null), e([y(l3)], K.prototype, "screenSizePerspectiveEnabled", void 0), e([y()], K.prototype, "sourceJSON", void 0), e([y({ type: f2, json: { origins: { service: { read: { source: "spatialReference" } } } } })], K.prototype, "spatialReference", void 0), e([y({ json: { read: false } })], K.prototype, "type", void 0), e([y(f3)], K.prototype, "url", void 0), e([y({ type: Number })], K.prototype, "updateInterval", void 0), e([y({ json: { read: false, write: false } })], K.prototype, "useViewTime", void 0), e([y({ type: String })], K.prototype, "webSocketUrl", void 0), K = e([a("esri.layers.StreamLayer")], K);
var X = K;
export {
  X as default
};
//# sourceMappingURL=StreamLayer-ZDC6KXIS.js.map
