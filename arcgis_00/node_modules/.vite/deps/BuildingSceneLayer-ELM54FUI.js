import {
  i as i2,
  le,
  t as t4
} from "./chunk-3GXDOJOY.js";
import {
  n as n4,
  p as p3
} from "./chunk-LQUQFN7F.js";
import {
  l as l3,
  m as m2,
  s as s7,
  u
} from "./chunk-FYOYPWJM.js";
import {
  K,
  N,
  r as r2
} from "./chunk-DXR6YJWZ.js";
import "./chunk-6S2FCH6S.js";
import "./chunk-HLVYJZGQ.js";
import "./chunk-DUKWKXVY.js";
import "./chunk-JSOIH23E.js";
import "./chunk-U3JB4DA4.js";
import "./chunk-56WQONSA.js";
import "./chunk-Y3JMDVEU.js";
import "./chunk-BN6X2OXK.js";
import "./chunk-GD4GJCPA.js";
import "./chunk-2CQBXY7G.js";
import "./chunk-AYMF6OMA.js";
import "./chunk-AEPMR2T7.js";
import "./chunk-EF6YPOUN.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-WDNVMLWG.js";
import "./chunk-X5SMFNYP.js";
import "./chunk-VZAEQ6CY.js";
import "./chunk-SS33L3LC.js";
import "./chunk-T3UXUOZW.js";
import "./chunk-FLVP2XLK.js";
import {
  Be
} from "./chunk-OCKZY4KB.js";
import "./chunk-7RVJFKSW.js";
import "./chunk-JPSSRLNG.js";
import "./chunk-ZVP2JCAJ.js";
import {
  i
} from "./chunk-LRYQNKYC.js";
import "./chunk-PAM4FXDN.js";
import "./chunk-4LMKB4SJ.js";
import "./chunk-2DE2MMH2.js";
import "./chunk-ILU5UH7D.js";
import "./chunk-6ALTXU4U.js";
import "./chunk-BPPSEHTY.js";
import {
  s as s6
} from "./chunk-MA4VBNWR.js";
import "./chunk-DTFJFPF7.js";
import "./chunk-ODP6NX3Y.js";
import "./chunk-UIMMV4OY.js";
import "./chunk-QZ4HHFPF.js";
import "./chunk-V56SNWAF.js";
import "./chunk-LLMRDEQF.js";
import "./chunk-UWP7BCPY.js";
import {
  p as p2
} from "./chunk-QMJALO7W.js";
import {
  n as n3
} from "./chunk-VRNAR2BU.js";
import "./chunk-IAMROCVA.js";
import "./chunk-7L7U6YJ3.js";
import {
  l as l2
} from "./chunk-NOI4I5TT.js";
import "./chunk-TPAPJ5F3.js";
import "./chunk-ENPG4N5M.js";
import "./chunk-D733RJGU.js";
import "./chunk-GVRDPBQU.js";
import "./chunk-YYGN2GO6.js";
import "./chunk-QXLGW66I.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import "./chunk-ZVOARKLE.js";
import {
  b as b2
} from "./chunk-BY57CSP7.js";
import "./chunk-52ZYWMNY.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-5BKFA3IG.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-NHDVBH5V.js";
import "./chunk-WLU7KKOI.js";
import {
  r
} from "./chunk-BA7WNJMF.js";
import "./chunk-ZZQVVHF7.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-JHVDJNJ7.js";
import {
  j as j3
} from "./chunk-M52YOZDN.js";
import "./chunk-P5CFKMGO.js";
import "./chunk-2EHBSKAM.js";
import "./chunk-HVBIBP5P.js";
import {
  t as t2
} from "./chunk-VLY2K2HC.js";
import {
  c as c2
} from "./chunk-AVOTXTN2.js";
import {
  O,
  S
} from "./chunk-4FGKBJP7.js";
import {
  c,
  d,
  j as j2,
  p,
  y as y2
} from "./chunk-LALFHQE3.js";
import {
  h
} from "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-IN5QJ5F4.js";
import "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import "./chunk-5IXGL4JZ.js";
import "./chunk-HKDZF6LN.js";
import "./chunk-BNNFX45U.js";
import "./chunk-U4IWFNWD.js";
import "./chunk-6L4U2AW6.js";
import "./chunk-LCWGEIX7.js";
import {
  h as h2
} from "./chunk-RFIIU6XF.js";
import {
  k
} from "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import {
  t as t3
} from "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-D76KSV7G.js";
import {
  a as a3,
  t
} from "./chunk-2H7DV6BT.js";
import {
  n as n2
} from "./chunk-CSKEV5FZ.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import {
  b as b3
} from "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-JZBA2N4X.js";
import {
  b
} from "./chunk-4W4V5TBI.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-2D2437VM.js";
import "./chunk-YIIAB4WA.js";
import "./chunk-KTSEQWMB.js";
import {
  o as o2
} from "./chunk-FUHI6TR6.js";
import "./chunk-FVYUULND.js";
import "./chunk-BRRN7CRU.js";
import {
  _
} from "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-5XLKQQPP.js";
import "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import "./chunk-H7C32RFW.js";
import {
  V
} from "./chunk-RNYFZDNI.js";
import {
  s as s5
} from "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  M
} from "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import {
  f as f2
} from "./chunk-4X5MDDUC.js";
import {
  o
} from "./chunk-UURR7HU3.js";
import {
  l
} from "./chunk-JLE6P4DW.js";
import {
  n
} from "./chunk-5EXFDBQJ.js";
import "./chunk-OHLUZSH7.js";
import "./chunk-QV5AXXWQ.js";
import "./chunk-CL7UAIKB.js";
import "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import {
  m
} from "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import {
  s as s4
} from "./chunk-JCWF5RB4.js";
import {
  y
} from "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2,
  s2 as s3
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T
} from "./chunk-SF7FIURP.js";
import {
  j
} from "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import {
  V as V2
} from "./chunk-TXAS6RAG.js";
import {
  f
} from "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-JGYHKABU.js";
import {
  a
} from "./chunk-3FXB2ZFK.js";
import "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var a4 = class extends s5(S) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, o3) {
    return "string" == typeof o3.alias ? o3.alias : "string" == typeof o3.name ? o3.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
e([y({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], a4.prototype, "title", void 0), e([o("service", "title", ["alias", "name"])], a4.prototype, "readTitle", null), e([y()], a4.prototype, "layer", void 0), e([y({ type: T, readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], a4.prototype, "id", void 0), e([o("service", "id")], a4.prototype, "readIdOnlyOnce", null), e([y(y2(String))], a4.prototype, "modelName", void 0), e([y(y2(Boolean))], a4.prototype, "isEmpty", void 0), e([y({ type: Boolean, nonNullable: true })], a4.prototype, "legendEnabled", void 0), e([y({ type: Boolean, json: { name: "visibility", write: true } })], a4.prototype, "visible", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "opacity", void 0), a4 = e([a2("esri.layers.buildingSublayers.BuildingSublayer")], a4);
var n5 = a4;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var Q = "esri.layers.buildingSublayers.BuildingComponentSublayer";
var E = s.getLogger(Q);
var A = s6();
var _2 = class extends _.LoadableMixin(m(n5)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a2, _b;
    return this.layer ? { path: `${(_a2 = this.layer.parsedUrl) == null ? void 0 : _a2.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new r(this.fields);
  }
  readAssociatedLayer(e3, r3) {
    const t8 = this.layer.associatedFeatureServiceItem, o3 = r3.associatedLayerID;
    return null != t8 && "number" == typeof o3 ? new Be({ portalItem: t8, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields)
        if ("oid" === e3.type)
          return e3.name;
    }
    return null;
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const r3 = null != e3 ? e3.signal : null, t8 = this._fetchService(r3).then(() => {
      this.indexInfo = r2(this.parsedUrl.path, this.rootNode, this.nodePages, this.apiKey, E, r3);
    });
    return this.addResolvingPromise(t8), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p2(this, e3);
  }
  async _fetchService(e3) {
    const r3 = (await j(this.parsedUrl.path, { query: { f: "json", token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(r3, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, r3) {
    var _a2, _b, _c;
    const t8 = (_b = (_a2 = this.getFeatureType(r3 == null ? void 0 : r3.feature)) == null ? void 0 : _a2.domains) == null ? void 0 : _b[e3];
    return t8 && "inherited" !== t8.type ? t8 : ((_c = this.getField(e3)) == null ? void 0 : _c.domain) ?? null;
  }
  getFeatureType(e3) {
    return e3 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : t4, { query: r3, data: { supportsZ: t8, supportsM: o3, isVersioned: s8 } } = e3;
    return { query: r3, data: { supportsZ: t8, supportsM: o3, isVersioned: s8 } };
  }
  createQuery() {
    const e3 = new b2();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t8) => t8.queryExtent(e3 || this.createQuery(), r3));
  }
  queryFeatureCount(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t8) => t8.queryFeatureCount(e3 || this.createQuery(), r3));
  }
  queryFeatures(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t8) => t8.queryFeatures(e3 || this.createQuery(), r3)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r4 of e4.features)
          r4.layer = this.layer, r4.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t8) => t8.queryObjectIds(e3 || this.createQuery(), r3));
  }
  async queryCachedAttributes(e3, r3) {
    const t8 = b3(this.fieldsIndex, await n4(this, p3(this)));
    return le(this.parsedUrl.path, this.attributeStorageInfo, e3, r3, t8);
  }
  async queryCachedFeature(e3, t8) {
    const o3 = await this.queryCachedAttributes(e3, [t8]);
    if (!o3 || 0 === o3.length)
      throw new s2("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    const s8 = new h2();
    return s8.attributes = o3[0], s8.layer = this, s8.sourceLayer = this, s8;
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return null != e3 && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer)
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
e([y({ readOnly: true })], _2.prototype, "parsedUrl", null), e([y({ type: s7, readOnly: true })], _2.prototype, "nodePages", void 0), e([y({ type: [l3], readOnly: true })], _2.prototype, "materialDefinitions", void 0), e([y({ type: [u], readOnly: true })], _2.prototype, "textureSetDefinitions", void 0), e([y({ type: [m2], readOnly: true })], _2.prototype, "geometryDefinitions", void 0), e([y({ readOnly: true })], _2.prototype, "serviceUpdateTimeStamp", void 0), e([y({ readOnly: true })], _2.prototype, "store", void 0), e([y({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], _2.prototype, "rootNode", void 0), e([y({ readOnly: true })], _2.prototype, "attributeStorageInfo", void 0), e([y(A.fields)], _2.prototype, "fields", void 0), e([y({ readOnly: true })], _2.prototype, "fieldsIndex", null), e([y({ readOnly: true, type: Be })], _2.prototype, "associatedLayer", void 0), e([o("service", "associatedLayer", ["associatedLayerID"])], _2.prototype, "readAssociatedLayer", null), e([y(A.outFields)], _2.prototype, "outFields", void 0), e([y({ type: String, readOnly: true })], _2.prototype, "objectIdField", null), e([y({ readOnly: true, type: String, json: { read: false } })], _2.prototype, "displayField", null), e([y({ readOnly: true, type: String })], _2.prototype, "apiKey", null), e([y({ readOnly: true, type: M })], _2.prototype, "fullExtent", null), e([y({ readOnly: true, type: f2 })], _2.prototype, "spatialReference", null), e([y({ readOnly: true })], _2.prototype, "version", null), e([y({ readOnly: true, type: h })], _2.prototype, "elevationInfo", null), e([y({ readOnly: true, type: Number })], _2.prototype, "minScale", null), e([y({ readOnly: true, type: Number })], _2.prototype, "maxScale", null), e([y({ readOnly: true, type: Number })], _2.prototype, "effectiveScaleRange", null), e([y({ type: ["hide", "show"], json: { write: true } })], _2.prototype, "listMode", void 0), e([y({ types: n3, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], _2.prototype, "renderer", void 0), e([y({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _2.prototype, "definitionExpression", void 0), e([y(p)], _2.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], _2.prototype, "popupTemplate", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], _2.prototype, "normalReferenceFrame", void 0), e([y({ readOnly: true, json: { read: false } })], _2.prototype, "defaultPopupTemplate", null), e([y()], _2.prototype, "types", null), e([y()], _2.prototype, "typeIdField", null), e([y({ json: { write: false } }), o2(new s4({ "3DObject": "3d-object", Point: "point" }))], _2.prototype, "layerType", void 0), e([y()], _2.prototype, "geometryType", null), e([y()], _2.prototype, "profile", null), e([y({ readOnly: true, json: { read: false } })], _2.prototype, "capabilities", null), _2 = e([a2(Q)], _2);
var C = _2;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a5;
var l4 = { type: V, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p4 } } }, read: false } };
function p4(r3, o3, t8) {
  if (r3 && Array.isArray(r3))
    return new V(r3.map((r4) => {
      const e3 = y3(r4);
      if (e3) {
        const o4 = new e3();
        return o4.read(r4, t8), o4;
      }
      return t8 && t8.messages && r4 && t8.messages.push(new s3("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r4.type || "unknown") + "' are not supported", { definition: r4, context: t8 })), null;
    }));
}
var c3 = a5 = class extends n5 {
  constructor(r3) {
    super(r3), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return a3(this, (r3) => a5.forEachSublayer(this.sublayers, (e3) => {
      "building-group" !== e3.type && r3(e3);
    }));
  }
};
function y3(r3) {
  return "group" === r3.layerType ? c3 : C;
}
e([y({ type: ["hide", "show", "hide-children"], json: { write: true } })], c3.prototype, "listMode", void 0), e([y(l4)], c3.prototype, "sublayers", void 0), c3 = a5 = e([a2("esri.layers.buildingSublayers.BuildingGroupSublayer")], c3), function(r3) {
  function e3(r4, o3) {
    r4.forEach((r5) => {
      o3(r5), "building-group" === r5.type && e3(r5.sublayers, o3);
    });
  }
  r3.sublayersProperty = l4, r3.readSublayers = p4, r3.forEachSublayer = e3;
}(c3 || (c3 = {}));
var d2 = c3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = e([a2("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p5 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var p6;
var i3 = p6 = class extends l {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new p6({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "filterType", void 0), e([y({ type: [String], json: { write: true } })], i3.prototype, "filterValues", void 0), i3 = p6 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoType")], i3);
var l5 = i3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c4;
var l6 = V.ofType(l5);
var n6 = c4 = class extends l {
  clone() {
    return new c4({ filterTypes: a(this.filterTypes) });
  }
};
e([y({ type: l6, json: { write: true } })], n6.prototype, "filterTypes", void 0), n6 = c4 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoBlock")], n6);
var m3 = n6;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p7;
var l7 = V.ofType(m3);
var n7 = p7 = class extends p5 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p7({ filterBlocks: a(this.filterBlocks) });
  }
};
e([y({ type: ["checkbox"] })], n7.prototype, "type", void 0), e([y({ type: l7, json: { write: true } })], n7.prototype, "filterBlocks", void 0), n7 = p7 = e([a2("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n7);
var u2 = n7;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t5 = class extends l {
};
e([y({ readOnly: true, json: { read: false } })], t5.prototype, "type", void 0), t5 = e([a2("esri.layers.support.BuildingFilterMode")], t5);
var p8 = t5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t6;
var p9 = t6 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t6();
  }
};
e([y({ type: ["solid"], readOnly: true, json: { write: true } })], p9.prototype, "type", void 0), p9 = t6 = e([a2("esri.layers.support.BuildingFilterModeSolid")], p9);
var i4 = p9;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c5;
var m4 = c5 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c5({ edges: a(this.edges) });
  }
};
e([o2({ wireFrame: "wire-frame" })], m4.prototype, "type", void 0), e([y(t3)], m4.prototype, "edges", void 0), m4 = c5 = e([a2("esri.layers.support.BuildingFilterModeWireFrame")], m4);
var a6 = m4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t7;
var p10 = t7 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t7();
  }
};
e([y({ type: ["x-ray"], readOnly: true, json: { write: true } })], p10.prototype, "type", void 0), p10 = t7 = e([a2("esri.layers.support.BuildingFilterModeXRay")], p10);
var c6 = p10;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d3;
var a7 = { nonNullable: true, types: { key: "type", base: p8, typeMap: { solid: i4, "wire-frame": a6, "x-ray": c6 } }, json: { read: (e3) => {
  switch (e3 && e3.type) {
    case "solid":
      return i4.fromJSON(e3);
    case "wireFrame":
      return a6.fromJSON(e3);
    case "x-ray":
      return c6.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var u3 = d3 = class extends l {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i4(), this.title = "";
  }
  clone() {
    return new d3({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u3.prototype, "filterExpression", void 0), e([y(a7)], u3.prototype, "filterMode", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u3.prototype, "title", void 0), u3 = d3 = e([a2("esri.layers.support.BuildingFilterBlock")], u3);
var c7 = u3;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var u4;
var d4 = V.ofType(c7);
var m5 = u4 = class extends l {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n(), this.name = null;
  }
  clone() {
    return new u4({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
e([y({ type: String, json: { write: true } })], m5.prototype, "description", void 0), e([y({ type: d4, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "filterBlocks", void 0), e([y({ types: { key: "type", base: p5, typeMap: { checkbox: u2 } }, json: { read: (o3) => "checkbox" === (o3 && o3.type) ? u2.fromJSON(o3) : null, write: true } })], m5.prototype, "filterAuthoringInfo", void 0), e([y({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "id", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "name", void 0), m5 = u4 = e([a2("esri.layers.support.BuildingFilter")], m5);
var f3 = m5;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p11 = class extends l {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([y({ type: String })], p11.prototype, "fieldName", void 0), e([y({ type: String })], p11.prototype, "modelName", void 0), e([y({ type: String })], p11.prototype, "label", void 0), e([y({ type: Number })], p11.prototype, "min", void 0), e([y({ type: Number })], p11.prototype, "max", void 0), e([y({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], p11.prototype, "mostFrequentValues", void 0), e([y({ type: [Number] })], p11.prototype, "subLayerIds", void 0), p11 = e([a2("esri.layers.support.BuildingFieldStatistics")], p11);
var n8 = class extends _.LoadableMixin(m(l)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (s.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r3 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r3)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t8 = (await j(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t8, { origin: "service" });
  }
};
e([y({ constructOnly: true, type: String })], n8.prototype, "url", void 0), e([y({ readOnly: true, type: [p11], json: { read: { source: "summary" } } })], n8.prototype, "fields", null), n8 = e([a2("esri.layers.support.BuildingSummaryStatistics")], n8);
var u5 = n8;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var F = V.ofType(f3);
var B = a(d2.sublayersProperty);
var _a;
var P = (_a = B.json) == null ? void 0 : _a.origins;
P && (P["web-scene"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, P["portal-item"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var K2 = class extends N(l2(c2(j3(t2(O(i(b))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new n2({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._sublayerOverrides = null, this.filters = new F(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r3, t8) {
    const s8 = d2.readSublayers(e3, r3, t8);
    return d2.forEachSublayer(s8, (e4) => e4.layer = this), this._sublayerOverrides && (this.applySublayerOverrides(s8, this._sublayerOverrides), this._sublayerOverrides = null), s8;
  }
  applySublayerOverrides(e3, { overrides: r3, context: t8 }) {
    d2.forEachSublayer(e3, (e4) => e4.read(r3.get(e4.id), t8));
  }
  readSublayerOverrides(e3, r3) {
    var _a2;
    const t8 = /* @__PURE__ */ new Map();
    for (const i5 of e3)
      null != i5 && "object" == typeof i5 && "number" == typeof i5.id ? t8.set(i5.id, i5) : (_a2 = r3.messages) == null ? void 0 : _a2.push(new s2("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i5 }));
    return { overrides: t8, context: r3 };
  }
  writeSublayerOverrides(e3, r3, t8) {
    const s8 = [];
    d2.forEachSublayer(this.sublayers, (e4) => {
      const r4 = e4.write({}, t8);
      Object.keys(r4).length > 1 && s8.push(r4);
    }), s8.length > 0 && (r3.sublayers = s8);
  }
  writeUnappliedOverrides(e3, r3) {
    r3.sublayers = [], e3.overrides.forEach((e4) => {
      r3.sublayers.push(a(e4));
    });
  }
  write(e3, r3) {
    return e3 = super.write(e3, r3), !r3 || "web-scene" !== r3.origin && "portal-item" !== r3.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e3, r3) : this._sublayerOverrides && this.writeUnappliedOverrides(this._sublayerOverrides, e3)), e3;
  }
  read(e3, r3) {
    if (super.read(e3, r3), r3 && ("web-scene" === r3.origin || "portal-item" === r3.origin) && null != e3 && Array.isArray(e3.sublayers)) {
      const t8 = this.readSublayerOverrides(e3.sublayers, r3);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t8) : this._sublayerOverrides = t8;
    }
  }
  readSummaryStatistics(e3, r3) {
    var _a2;
    if ("string" == typeof r3.statisticsHRef) {
      const e4 = V2((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r3.statisticsHRef);
      return new u5({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r3 = null != e3 ? e3.signal : null, t8 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(f).then(() => this._fetchService(r3)).then(() => this._fetchAssociatedFeatureService(r3));
    return this.addResolvingPromise(t8), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e3) => {
      d2.forEachSublayer(this.sublayers, (r3) => {
        "building-group" !== r3.type && e3(r3);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r3) {
    return this._debouncedSaveOperations(K.SAVE_AS, { ...r3, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(K.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType)
      throw new s2("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    e3 && ("absolute-height" !== e3.mode && s.getLogger(this).warn(".elevationInfo=", "Building scene layers only support absolute-height elevation mode"), e3.featureExpressionInfo && "0" !== e3.featureExpressionInfo.expression && s.getLogger(this).warn(".elevationInfo=", "Building scene layers do not support featureExpressionInfo"));
  }
  async _fetchAssociatedFeatureService(e3) {
    const r3 = new i2(this.parsedUrl, this.portalItem, this.apiKey, e3);
    try {
      this.associatedFeatureServiceItem = await r3.fetchPortalItem();
    } catch (t8) {
      s.getLogger(this).warn("Associated feature service item could not be loaded", t8);
    }
  }
};
e([y({ type: ["BuildingSceneLayer"] })], K2.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], K2.prototype, "allSublayers", void 0), e([y(B)], K2.prototype, "sublayers", void 0), e([o("service", "sublayers")], K2.prototype, "readSublayers", null), e([y({ type: F, nonNullable: true, json: { write: true } })], K2.prototype, "filters", void 0), e([y({ type: String, json: { write: true } })], K2.prototype, "activeFilterId", void 0), e([y({ readOnly: true, type: u5 })], K2.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], K2.prototype, "readSummaryStatistics", null), e([y({ type: [String], json: { read: false } })], K2.prototype, "outFields", void 0), e([y(j2)], K2.prototype, "fullExtent", void 0), e([y(c)], K2.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], K2.prototype, "listMode", void 0), e([y(y2(f2))], K2.prototype, "spatialReference", void 0), e([y(d)], K2.prototype, "elevationInfo", null), e([y({ json: { read: false }, readOnly: true })], K2.prototype, "type", void 0), e([y()], K2.prototype, "associatedFeatureServiceItem", void 0), K2 = e([a2("esri.layers.BuildingSceneLayer")], K2);
var R = K2;
export {
  R as default
};
//# sourceMappingURL=BuildingSceneLayer-ELM54FUI.js.map
