import {
  W
} from "./chunk-IRCGNHY3.js";
import "./chunk-GD3LP3EF.js";
import "./chunk-ZU5I6A3X.js";
import "./chunk-H7V7HYRJ.js";
import "./chunk-GJ4AX7TK.js";
import "./chunk-PH2HQMHS.js";
import "./chunk-EZOSZES7.js";
import "./chunk-5EHLOJ6Z.js";
import "./chunk-SS7JZLQV.js";
import "./chunk-6HXKIKIT.js";
import "./chunk-XQSFOYTA.js";
import "./chunk-XGFXC7IN.js";
import "./chunk-2YLUDNP5.js";
import "./chunk-OW4XGQQP.js";
import "./chunk-WON6TZX6.js";
import "./chunk-MYZ743ND.js";
import "./chunk-4GVOVKVX.js";
import "./chunk-LQUQFN7F.js";
import "./chunk-AER5JAFS.js";
import "./chunk-7HZ72XIE.js";
import "./chunk-P662BGUZ.js";
import "./chunk-PM77FW2O.js";
import "./chunk-VR7WK7TF.js";
import "./chunk-4XXKLC7H.js";
import "./chunk-NVZXNBIH.js";
import "./chunk-K6D7DQGC.js";
import "./chunk-CN3PB7HS.js";
import "./chunk-SQZ7ON7Z.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-PX3Q44FM.js";
import "./chunk-XYJMHUDA.js";
import "./chunk-CSLWFQJE.js";
import "./chunk-PR2OEILG.js";
import "./chunk-XP6ESZGI.js";
import "./chunk-JKPERUTC.js";
import "./chunk-A4HFWKMU.js";
import "./chunk-TDXHXKUI.js";
import "./chunk-AZ4FK2MA.js";
import "./chunk-EULDPA4O.js";
import "./chunk-IVABPLLZ.js";
import "./chunk-TBHRKIAA.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-EIIX6MK3.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-R6HT3QM2.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-5CJTGLZW.js";
import "./chunk-3QLIFMET.js";
import "./chunk-UOQERNSF.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-GTOF2BJC.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-EL72ISXP.js";
import "./chunk-5KLICR5E.js";
import "./chunk-CKSC27NP.js";
import "./chunk-WNYS35QN.js";
import "./chunk-VFUAVCAY.js";
import "./chunk-VZAEQ6CY.js";
import "./chunk-SS33L3LC.js";
import "./chunk-X4Y5OF5X.js";
import {
  d
} from "./chunk-2DE2MMH2.js";
import "./chunk-6ALTXU4U.js";
import "./chunk-UIMMV4OY.js";
import "./chunk-QZ4HHFPF.js";
import "./chunk-7L7U6YJ3.js";
import "./chunk-YYGN2GO6.js";
import "./chunk-YGH3EEG5.js";
import "./chunk-H7EOZY7L.js";
import "./chunk-LKYCF7AI.js";
import "./chunk-DDZ6WPWX.js";
import "./chunk-BY57CSP7.js";
import "./chunk-52ZYWMNY.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-R5EWWIOD.js";
import "./chunk-52L3OT7H.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-2EHBSKAM.js";
import "./chunk-HVBIBP5P.js";
import "./chunk-LALFHQE3.js";
import "./chunk-IVCYO56U.js";
import "./chunk-JGFWZDK3.js";
import "./chunk-C4I3X4RM.js";
import "./chunk-GVMBTEIW.js";
import "./chunk-HKDZF6LN.js";
import "./chunk-BNNFX45U.js";
import "./chunk-6L4U2AW6.js";
import "./chunk-LCWGEIX7.js";
import "./chunk-RFIIU6XF.js";
import "./chunk-DGADM4KQ.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7C7EF3FD.js";
import "./chunk-PQOGMOZ7.js";
import "./chunk-XMS7FYO7.js";
import "./chunk-HOGRNOD4.js";
import "./chunk-NZY6MEON.js";
import "./chunk-Z74XNIJ3.js";
import "./chunk-GRS3EHGG.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-TNYMHVJ4.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-Z6HMRH7V.js";
import "./chunk-HABV4VZ2.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-FUHI6TR6.js";
import "./chunk-BRRN7CRU.js";
import "./chunk-TLIPFBCN.js";
import "./chunk-7KTXAH5E.js";
import "./chunk-WYE6B4VU.js";
import "./chunk-X5ASTC4J.js";
import "./chunk-3OL5L3LC.js";
import "./chunk-H7C32RFW.js";
import "./chunk-RNYFZDNI.js";
import "./chunk-FBG4WSP5.js";
import "./chunk-G3X4SV7G.js";
import "./chunk-AJM6LB5B.js";
import "./chunk-G4LADD2B.js";
import "./chunk-HLTEFNTE.js";
import "./chunk-CO3TM5QL.js";
import "./chunk-FARQZCLL.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-E5XSQEGK.js";
import "./chunk-MZXYP6SL.js";
import "./chunk-4X5MDDUC.js";
import "./chunk-UURR7HU3.js";
import "./chunk-JLE6P4DW.js";
import "./chunk-OHLUZSH7.js";
import "./chunk-QV5AXXWQ.js";
import "./chunk-CL7UAIKB.js";
import {
  h,
  l
} from "./chunk-F3SBJW2O.js";
import "./chunk-YVCC2Z32.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-YC3PYTAZ.js";
import "./chunk-46JSCFRH.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-VPF2CM6B.js";
import "./chunk-JCWF5RB4.js";
import "./chunk-TBBTJ7N4.js";
import "./chunk-NUI5LCQ5.js";
import {
  a2 as a
} from "./chunk-AS7ITRBV.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SF7FIURP.js";
import "./chunk-K7YQIZQM.js";
import "./chunk-H3ETM4DZ.js";
import "./chunk-TXAS6RAG.js";
import "./chunk-G72U56FP.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-JGYHKABU.js";
import "./chunk-3FXB2ZFK.js";
import {
  has
} from "./chunk-WQNVH5M4.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function n(e2, r) {
  return !e2.visible || 0 !== e2.minScale && r > e2.minScale || 0 !== e2.maxScale && r < e2.maxScale;
}
var l2 = class extends W {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n2 = e2 && (r || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n2}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n2;
  }
  _injectOverrides(e2) {
    let r = super._injectOverrides(e2);
    const s = this.view.scale, i = this.layer.sublayers.filter((e3) => n(e3, s)).map((e3) => e3.subtypeCode);
    if (!i.length)
      return r;
    r = null != r ? r : new d().toJSON();
    const a2 = `NOT ${this.layer.subtypeField} IN (${i.join(",")})`;
    return r.where = r.where ? `(${r.where}) AND (${a2})` : a2, r;
  }
  _setLayersForFeature(e2) {
    const r = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
l2 = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], l2);
var o = l2;
export {
  o as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-YXIZE2KZ.js.map
